###############################################################################
#
# IAR C/C++ Compiler V9.20.1.2476 for 8051                22/Feb/2017  15:31:02
# Copyright 2004-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\Source\DemoAppCommon.c
#    Command line       =  
#        -f
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00002000 -DZDAPP_CONFIG_PAN_ID=0xABCD
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={'H', 'O', 'G', 'E', 'S',
#        'C', 'H', 'O', 'O', 'L', 'U', 'T', 'R', 'E', 'C', 'H'}"
#        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
#        -DREJOIN_POLL_RATE=440
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\Source\DemoAppCommon.c
#        -D HOLD_AUTO_START -D BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D
#        NV_RESTORE -D HAL_UART=TRUE -lC
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\List\
#        -lA
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\List\
#        --diag_suppress Pe001,Pa010,Pe1665 -o
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\Obj\
#        -e --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 16 -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\Source\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ol --require_prototypes
#    List file          =  
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\List\DemoAppCommon.lst
#    Object file        =  
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\Obj\DemoAppCommon.r51
#
###############################################################################

C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\Source\DemoAppCommon.c
      1          /**************************************************************************************************
      2            Filename:       DemoAppCommon.c
      3          
      4            Description:    Common functionality for the sensor demo application.
      5          
      6          
      7            Copyright 2009 Texas Instruments Incorporated. All rights reserved.
      8          
      9            IMPORTANT: Your use of this Software is limited to those specific rights
     10            granted under the terms of a software license agreement between the user
     11            who downloaded the software, his/her employer (which must be your employer)
     12            and Texas Instruments Incorporated (the "License").  You may not use this
     13            Software unless you agree to abide by the terms of the License. The License
     14            limits your use, and you acknowledge, that the Software may not be modified,
     15            copied or distributed unless embedded on a Texas Instruments microcontroller
     16            or used solely and exclusively in conjunction with a Texas Instruments radio
     17            frequency transceiver, which is integrated into your product.  Other than for
     18            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     19            works of, modify, distribute, perform, display or sell this Software and/or
     20            its documentation for any purpose.
     21          
     22            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     23            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     24            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     25            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     26            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     27            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     28            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     29            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     30            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     31            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     32            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     33          
     34            Should you have any questions regarding your right to use this Software,
     35            contact Texas Instruments Incorporated at www.TI.com.
     36          **************************************************************************************************/
     37          
     38          /******************************************************************************
     39           * INCLUDES
     40           */
     41          #include "hal_uart.h"
     42          #include "hal_drivers.h"
     43          #include "OSAL_Tasks.h"
     44          
     45          #if defined ( MT_TASK )
     46            #include "MT.h"
     47            #include "MT_TASK.h"
     48          #endif
     49          
     50          #include "ZDObject.h"
     51          #include "MT_SAPI.h"
     52          
     53          #include "DemoApp.h"
     54          
     55          /******************************************************************************
     56           * FUNCTIONS
     57           */
     58          
     59          /*********************************************************************
     60           * @fn      osalInitTasks
     61           *
     62           * @brief   This function invokes the initialization function for each task.
     63           *
     64           * @param   void
     65           *
     66           * @return  none
     67           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     68          void osalInitTasks( void )
   \                     osalInitTasks:
     69          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
     70            uint8 taskID = 0;
   \   000005   7E00         MOV     R6,#0x0
     71          
     72            tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
   \   000007                ; Setup parameters for call to function osal_mem_alloc
   \   000007   90....       MOV     DPTR,#tasksCnt
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   FA           MOV     R2,A
   \   00000C   7B00         MOV     R3,#0x0
   \   00000E   EA           MOV     A,R2
   \   00000F   75F002       MOV     B,#0x2
   \   000012   A4           MUL     AB
   \   000013   CA           XCH     A,R2
   \   000014   A8F0         MOV     R0,B
   \   000016   75F000       MOV     B,#0x0
   \   000019   A4           MUL     AB
   \   00001A   28           ADD     A,R0
   \   00001B   F8           MOV     R0,A
   \   00001C   75F002       MOV     B,#0x2
   \   00001F   EB           MOV     A,R3
   \   000020   A4           MUL     AB
   \   000021   28           ADD     A,R0
   \   000022   FB           MOV     R3,A
   \   000023   12....       LCALL   `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
   \   000026   90....       MOV     DPTR,#tasksEvents
   \   000029   EA           MOV     A,R2
   \   00002A   F0           MOVX    @DPTR,A
   \   00002B   A3           INC     DPTR
   \   00002C   EB           MOV     A,R3
   \   00002D   F0           MOVX    @DPTR,A
     73            osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
   \   00002E                ; Setup parameters for call to function osal_memset
   \   00002E   90....       MOV     DPTR,#tasksCnt
   \   000031   E0           MOVX    A,@DPTR
   \   000032   FC           MOV     R4,A
   \   000033   7D00         MOV     R5,#0x0
   \   000035   EC           MOV     A,R4
   \   000036   75F002       MOV     B,#0x2
   \   000039   A4           MUL     AB
   \   00003A   CC           XCH     A,R4
   \   00003B   A8F0         MOV     R0,B
   \   00003D   75F000       MOV     B,#0x0
   \   000040   A4           MUL     AB
   \   000041   28           ADD     A,R0
   \   000042   F8           MOV     R0,A
   \   000043   75F002       MOV     B,#0x2
   \   000046   ED           MOV     A,R5
   \   000047   A4           MUL     AB
   \   000048   28           ADD     A,R0
   \   000049   FD           MOV     R5,A
   \   00004A   7900         MOV     R1,#0x0
   \   00004C   90....       MOV     DPTR,#tasksEvents
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   FA           MOV     R2,A
   \   000051   A3           INC     DPTR
   \   000052   E0           MOVX    A,@DPTR
   \   000053   FB           MOV     R3,A
   \   000054   12....       LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
     74          
     75            macTaskInit( taskID++ );
   \   000057                ; Setup parameters for call to function macTaskInit
   \   000057   EE           MOV     A,R6
   \   000058   F9           MOV     R1,A
   \   000059   12....       LCALL   `??macTaskInit::?relay`; Banked call to: macTaskInit
   \   00005C   0E           INC     R6
     76            nwk_init( taskID++ );
   \   00005D                ; Setup parameters for call to function nwk_init
   \   00005D   EE           MOV     A,R6
   \   00005E   F9           MOV     R1,A
   \   00005F   12....       LCALL   `??nwk_init::?relay` ; Banked call to: nwk_init
   \   000062   0E           INC     R6
     77            Hal_Init( taskID++ );
   \   000063                ; Setup parameters for call to function Hal_Init
   \   000063   EE           MOV     A,R6
   \   000064   F9           MOV     R1,A
   \   000065   12....       LCALL   `??Hal_Init::?relay` ; Banked call to: Hal_Init
   \   000068   0E           INC     R6
     78          #if defined( MT_TASK )
     79            MT_TaskInit( taskID++ );
     80          #endif
     81            APS_Init( taskID++ );
   \   000069                ; Setup parameters for call to function APS_Init
   \   000069   EE           MOV     A,R6
   \   00006A   F9           MOV     R1,A
   \   00006B   12....       LCALL   `??APS_Init::?relay` ; Banked call to: APS_Init
   \   00006E   0E           INC     R6
     82            ZDApp_Init( taskID++ );
   \   00006F                ; Setup parameters for call to function ZDApp_Init
   \   00006F   EE           MOV     A,R6
   \   000070   F9           MOV     R1,A
   \   000071   12....       LCALL   `??ZDApp_Init::?relay`; Banked call to: ZDApp_Init
   \   000074   0E           INC     R6
     83            USER_event( taskID++ );
   \   000075                ; Setup parameters for call to function USER_event
   \   000075   EE           MOV     A,R6
   \   000076   F9           MOV     R1,A
   \   000077   12....       LCALL   `??USER_event::?relay`; Banked call to: USER_event
   \   00007A   0E           INC     R6
     84            SAPI_Init( taskID );
   \   00007B                ; Setup parameters for call to function SAPI_Init
   \   00007B   EE           MOV     A,R6
   \   00007C   F9           MOV     R1,A
   \   00007D   12....       LCALL   `??SAPI_Init::?relay`; Banked call to: SAPI_Init
     85            
     86          }
   \   000080   7F01         MOV     R7,#0x1
   \   000082   02....       LJMP    ?BANKED_LEAVE_XDATA
     87          

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     88          void USER_event( byte task_id ){
   \                     USER_event:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
     89            osal_set_event(task_id, DOOR_OPEN_EVENT);
   \   000007                ; Setup parameters for call to function osal_set_event
   \   000007   7A00         MOV     R2,#0x0
   \   000009   7B60         MOV     R3,#0x60
   \   00000B   EE           MOV     A,R6
   \   00000C   F9           MOV     R1,A
   \   00000D   12....       LCALL   `??osal_set_event::?relay`; Banked call to: osal_set_event
   \   000010   E9           MOV     A,R1
     90            osal_set_event(task_id, DOOR_CLOSED_EVENT);
   \   000011                ; Setup parameters for call to function osal_set_event
   \   000011   7A00         MOV     R2,#0x0
   \   000013   7B50         MOV     R3,#0x50
   \   000015   EE           MOV     A,R6
   \   000016   F9           MOV     R1,A
   \   000017   12....       LCALL   `??osal_set_event::?relay`; Banked call to: osal_set_event
   \   00001A   E9           MOV     A,R1
     91          }
   \   00001B   7F01         MOV     R7,#0x1
   \   00001D   02....       LJMP    ?BANKED_LEAVE_XDATA
     92          
     93          /******************************************************************************
     94           * @fn          initUart
     95           *
     96           * @brief       Initialise UART
     97           *
     98           * @param       pf - Function pointer to UART callback function
     99           *
    100           * @return      none
    101           */

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    102          void initUart(halUARTCBack_t pf)
   \                     initUart:
    103          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 29
   \   000004   74E3         MOV     A,#-0x1d
   \   000006   12....       LCALL   ?ALLOC_XSTACK8
    104            halUARTCfg_t uartConfig;
    105          
    106            uartConfig.configured           = TRUE;
   \   000009   85..82       MOV     DPL,?XSP + 0
   \   00000C   85..83       MOV     DPH,?XSP + 1
   \   00000F   7401         MOV     A,#0x1
   \   000011   F0           MOVX    @DPTR,A
    107            uartConfig.baudRate             = HAL_UART_BR_38400;
   \   000012   7401         MOV     A,#0x1
   \   000014   12....       LCALL   ?XSTACK_DISP0_8
   \   000017   7402         MOV     A,#0x2
   \   000019   F0           MOVX    @DPTR,A
    108            uartConfig.flowControl          = FALSE;
   \   00001A   7402         MOV     A,#0x2
   \   00001C   12....       LCALL   ?XSTACK_DISP0_8
   \   00001F   7400         MOV     A,#0x0
   \   000021   F0           MOVX    @DPTR,A
    109            uartConfig.flowControlThreshold = 48;
   \   000022   7403         MOV     A,#0x3
   \   000024   12....       LCALL   ?XSTACK_DISP0_8
   \   000027   7430         MOV     A,#0x30
   \   000029   F0           MOVX    @DPTR,A
   \   00002A   A3           INC     DPTR
   \   00002B   7400         MOV     A,#0x0
   \   00002D   F0           MOVX    @DPTR,A
    110            uartConfig.rx.maxBufSize        = RX_BUF_LEN;
   \   00002E   740A         MOV     A,#0xa
   \   000030   12....       LCALL   ?XSTACK_DISP0_8
   \   000033   7480         MOV     A,#-0x80
   \   000035   F0           MOVX    @DPTR,A
   \   000036   A3           INC     DPTR
   \   000037   7400         MOV     A,#0x0
   \   000039   F0           MOVX    @DPTR,A
    111            uartConfig.tx.maxBufSize        = 128;
   \   00003A   7412         MOV     A,#0x12
   \   00003C   12....       LCALL   ?XSTACK_DISP0_8
   \   00003F   7480         MOV     A,#-0x80
   \   000041   F0           MOVX    @DPTR,A
   \   000042   A3           INC     DPTR
   \   000043   7400         MOV     A,#0x0
   \   000045   F0           MOVX    @DPTR,A
    112          
    113            uartConfig.idleTimeout          = 6;
   \   000046   7405         MOV     A,#0x5
   \   000048   12....       LCALL   ?XSTACK_DISP0_8
   \   00004B   7406         MOV     A,#0x6
   \   00004D   F0           MOVX    @DPTR,A
    114            uartConfig.intEnable            = TRUE;
   \   00004E   7416         MOV     A,#0x16
   \   000050   12....       LCALL   ?XSTACK_DISP0_8
   \   000053   7401         MOV     A,#0x1
   \   000055   F0           MOVX    @DPTR,A
    115            uartConfig.callBackFunc         = pf;
   \   000056   741B         MOV     A,#0x1b
   \   000058   12....       LCALL   ?XSTACK_DISP0_8
   \   00005B   EA           MOV     A,R2
   \   00005C   F0           MOVX    @DPTR,A
   \   00005D   A3           INC     DPTR
   \   00005E   EB           MOV     A,R3
   \   00005F   F0           MOVX    @DPTR,A
    116          
    117            HalUARTOpen (HAL_UART_PORT_0, &uartConfig);
   \   000060                ; Setup parameters for call to function HalUARTOpen
   \   000060   AA..         MOV     R2,?XSP + 0
   \   000062   AB..         MOV     R3,?XSP + 1
   \   000064   7900         MOV     R1,#0x0
   \   000066   12....       LCALL   `??HalUARTOpen::?relay`; Banked call to: HalUARTOpen
   \   000069   E9           MOV     A,R1
    118          }
   \   00006A   741D         MOV     A,#0x1d
   \   00006C   12....       LCALL   ?DEALLOC_XSTACK8
   \   00006F   D083         POP     DPH
   \   000071   D082         POP     DPL
   \   000073   02....       LJMP    ?BRET

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??osalInitTasks::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    osalInitTasks

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??USER_event::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    USER_event

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??initUart::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    initUart

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      0     18   USER_event
        0      9   -> osal_set_event
      2     29   initUart
        2     29   -> HalUARTOpen
      0      9   osalInitTasks
        0      9   -> APS_Init
        0      9   -> Hal_Init
        0      9   -> SAPI_Init
        0      9   -> USER_event
        0      9   -> ZDApp_Init
        0      9   -> macTaskInit
        0      9   -> nwk_init
        0      9   -> osal_mem_alloc
        0      9   -> osal_memset


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      32  USER_event
       6  USER_event::?relay
     118  initUart
       6  initUart::?relay
     133  osalInitTasks
       6  osalInitTasks::?relay

 
 283 bytes in segment BANKED_CODE
  18 bytes in segment BANK_RELAYS
 
 301 bytes of CODE memory

Errors: none
Warnings: none
