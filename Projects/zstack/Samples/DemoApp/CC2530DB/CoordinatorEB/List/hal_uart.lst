###############################################################################
#
# IAR C/C++ Compiler V9.20.1.2476 for 8051                22/Feb/2017  14:31:40
# Copyright 2004-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for 8051
#
#    Core               =  plain
#    Code model         =  banked
#    Data model         =  large
#    Calling convention =  xdata reentrant
#    Constant location  =  data_rom
#    Dptr setup         =  1,16
#                          
#    Source file        =  
#        C:\Users\koen\ZigBee-Code-WTWS\Components\hal\target\CC2530EB\hal_uart.c
#    Command line       =  
#        -f
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
#        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
#        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
#        -DZDO_COORDINATOR -DRTR_NWK) -f
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
#        (-DZIGBEEPRO -DSECURE=0 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
#        -DDEFAULT_CHANLIST=0x00002000 -DZDAPP_CONFIG_PAN_ID=0xABCD
#        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
#        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
#        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
#        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
#        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
#        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
#        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
#        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={'H', 'O', 'G', 'E', 'S',
#        'C', 'H', 'O', 'O', 'L', 'U', 'T', 'R', 'E', 'C', 'H'}"
#        -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
#        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
#        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100)
#        -DREJOIN_POLL_RATE=440
#        C:\Users\koen\ZigBee-Code-WTWS\Components\hal\target\CC2530EB\hal_uart.c
#        -D HOLD_AUTO_START -D BUILD_ALL_DEVICES -D REFLECTOR -D NV_INIT -D
#        NV_RESTORE -D HAL_UART=TRUE -lC
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\List\
#        -lA
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\List\
#        --diag_suppress Pe001,Pa010,Pe1665 -o
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\Obj\
#        -e --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        --core=plain --dptr=16,1 --data_model=large --code_model=banked
#        --calling_convention=xdata_reentrant --place_constants=data_rom
#        --nr_virtual_regs 16 -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\Source\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\ZMain\TI2530DB\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\hal\include\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\include\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\high_level\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\mt\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\osal\include\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\services\saddr\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\services\sdata\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\af\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\nwk\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\sapi\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\sec\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\sys\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\stack\zdo\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\zmac\
#        -I
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
#        -Ol --require_prototypes
#    List file          =  
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\List\hal_uart.lst
#    Object file        =  
#        C:\Users\koen\ZigBee-Code-WTWS\Projects\zstack\Samples\DemoApp\CC2530DB\CoordinatorEB\Obj\hal_uart.r51
#
###############################################################################

C:\Users\koen\ZigBee-Code-WTWS\Components\hal\target\CC2530EB\hal_uart.c
      1          /**************************************************************************************************
      2            Filename:       _hal_uart.c
      3            Revised:        $Date: 2009-06-12 09:16:43 -0700 (Fri, 12 Jun 2009) $
      4            Revision:       $Revision: 20142 $
      5          
      6            Description: This file contains the interface to the H/W UART driver.
      7          
      8          
      9            Copyright 2006-2009 Texas Instruments Incorporated. All rights reserved.
     10          
     11            IMPORTANT: Your use of this Software is limited to those specific rights
     12            granted under the terms of a software license agreement between the user
     13            who downloaded the software, his/her employer (which must be your employer)
     14            and Texas Instruments Incorporated (the "License").  You may not use this
     15            Software unless you agree to abide by the terms of the License. The License
     16            limits your use, and you acknowledge, that the Software may not be modified,
     17            copied or distributed unless embedded on a Texas Instruments microcontroller
     18            or used solely and exclusively in conjunction with a Texas Instruments radio
     19            frequency transceiver, which is integrated into your product.  Other than for
     20            the foregoing purpose, you may not use, reproduce, copy, prepare derivative
     21            works of, modify, distribute, perform, display or sell this Software and/or
     22            its documentation for any purpose.
     23          
     24            YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
     25            PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
     26            INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
     27            NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
     28            TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
     29            NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
     30            LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
     31            INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
     32            OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
     33            OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
     34            (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
     35          
     36            Should you have any questions regarding your right to use this Software,
     37            contact Texas Instruments Incorporated at www.TI.com.
     38          **************************************************************************************************/
     39          
     40          /*********************************************************************
     41           * INCLUDES
     42           */
     43          
     44          #include "hal_board_cfg.h"

   \                                 In  segment SFR_AN, at 0x80
   \   union <unnamed> volatile __sfr _A_P0
   \                     _A_P0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x86
   \   unsigned char volatile __sfr U0CSR
   \                     U0CSR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0x95
   \   unsigned char volatile __sfr ST0
   \                     ST0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IEN0
   \                     _A_IEN0:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xab
   \   unsigned char volatile __sfr P0IEN
   \                     P0IEN:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc2
   \   unsigned char volatile __sfr U0BAUD
   \                     U0BAUD:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc4
   \   unsigned char volatile __sfr U0UCR
   \                     U0UCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xc5
   \   unsigned char volatile __sfr U0GCR
   \                     U0GCR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd1
   \   unsigned char volatile __sfr DMAIRQ
   \                     DMAIRQ:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd6
   \   unsigned char volatile __sfr DMAARM
   \                     DMAARM:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xd7
   \   unsigned char volatile __sfr DMAREQ
   \                     DMAREQ:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf1
   \   unsigned char volatile __sfr PERCFG
   \                     PERCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf2
   \   unsigned char volatile __sfr ADCCFG
   \                     ADCCFG:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xf3
   \   unsigned char volatile __sfr P0SEL
   \                     P0SEL:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xfd
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In  segment SFR_AN, at 0xff
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
     45          #include "hal_defs.h"
     46          #include "hal_types.h"
     47          #include "hal_uart.h"
     48          
     49          /*********************************************************************
     50           * MACROS
     51           */
     52          
     53          /*********************************************************************
     54           * TYPEDEFS
     55           */
     56          
     57          /*********************************************************************
     58           * CONSTANTS
     59           */
     60          
     61          /*********************************************************************
     62           * GLOBAL VARIABLES
     63           */
     64          
     65          /*********************************************************************
     66           * GLOBAL FUNCTIONS
     67           */
     68          
     69          /*********************************************************************
     70           * LOCAL VARIABLES
     71           */
     72          
     73          /*********************************************************************
     74           * LOCAL FUNCTIONS
     75           */
     76          
     77          #if HAL_UART_DMA
     78          #include "_hal_uart_dma.c"

   \                                 In  segment XDATA_Z, align 1, keep-with-next
   \   static uartDMACfg_t dmaCfg
   \                     dmaCfg:
   \   000000                DS 1038
   \   00040E                REQUIRE __INIT_XDATA_Z

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint8 findTail(void)
   \                     findTail:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   90....       MOV     DPTR,#dmaCfg + 512
   \   000007   E0           MOVX    A,@DPTR
   \   000008   F9           MOV     R1,A
   \                     ??findTail_0:
   \   000009   E9           MOV     A,R1
   \   00000A   FA           MOV     R2,A
   \   00000B   7B00         MOV     R3,#0x0
   \   00000D   EA           MOV     A,R2
   \   00000E   75F002       MOV     B,#0x2
   \   000011   A4           MUL     AB
   \   000012   CA           XCH     A,R2
   \   000013   A8F0         MOV     R0,B
   \   000015   75F000       MOV     B,#0x0
   \   000018   A4           MUL     AB
   \   000019   28           ADD     A,R0
   \   00001A   F8           MOV     R0,A
   \   00001B   75F002       MOV     B,#0x2
   \   00001E   EB           MOV     A,R3
   \   00001F   A4           MUL     AB
   \   000020   28           ADD     A,R0
   \   000021   FB           MOV     R3,A
   \   000022   74..         MOV     A,#dmaCfg & 0xff
   \   000024   2A           ADD     A,R2
   \   000025   F582         MOV     DPL,A
   \   000027   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000029   3B           ADDC    A,R3
   \   00002A   F583         MOV     DPH,A
   \   00002C   E0           MOVX    A,@DPTR
   \   00002D   FA           MOV     R2,A
   \   00002E   A3           INC     DPTR
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   FB           MOV     R3,A
   \   000031   E4           CLR     A
   \   000032   CB           XCH     A,R3
   \   000033   FA           MOV     R2,A
   \   000034   EA           MOV     A,R2
   \   000035   65C2         XRL     A,0xc2
   \   000037   7008         JNZ     ??findTail_1
   \   000039   09           INC     R1
   \   00003A   90....       MOV     DPTR,#dmaCfg + 512
   \   00003D   E0           MOVX    A,@DPTR
   \   00003E   69           XRL     A,R1
   \   00003F   70C8         JNZ     ??findTail_0
   \                     ??findTail_1:
   \   000041   D083         POP     DPH
   \   000043   D082         POP     DPL
   \   000045   02....       LJMP    ?BRET
   \   000048                REQUIRE U0BAUD

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTInitDMA(void)
   \                     HalUARTInitDMA:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   53FF3F       ANL     0xff,#0x3f
   \   000007   85FFFF       MOV     0xff,0xff
   \   00000A   53F1FE       ANL     0xf1,#0xfe
   \   00000D   43F30C       ORL     0xf3,#0xc
   \   000010   53F2F3       ANL     0xf2,#0xf3
   \   000013   758680       MOV     0x86,#-0x80
   \   000016   75C480       MOV     0xc4,#-0x80
   \   000019   7A..         MOV     R2,#(dmaCh1234 + 24) & 0xff
   \   00001B   7B..         MOV     R3,#((dmaCh1234 + 24) >> 8) & 0xff
   \   00001D   8A82         MOV     DPL,R2
   \   00001F   8B83         MOV     DPH,R3
   \   000021   A3           INC     DPTR
   \   000022   A3           INC     DPTR
   \   000023   7470         MOV     A,#0x70
   \   000025   F0           MOVX    @DPTR,A
   \   000026   8A82         MOV     DPL,R2
   \   000028   8B83         MOV     DPH,R3
   \   00002A   A3           INC     DPTR
   \   00002B   A3           INC     DPTR
   \   00002C   A3           INC     DPTR
   \   00002D   74C1         MOV     A,#-0x3f
   \   00002F   F0           MOVX    @DPTR,A
   \   000030   8A82         MOV     DPL,R2
   \   000032   8B83         MOV     DPH,R3
   \   000034   A3           INC     DPTR
   \   000035   A3           INC     DPTR
   \   000036   A3           INC     DPTR
   \   000037   A3           INC     DPTR
   \   000038   E0           MOVX    A,@DPTR
   \   000039   541F         ANL     A,#0x1f
   \   00003B   F0           MOVX    @DPTR,A
   \   00003C   8A82         MOV     DPL,R2
   \   00003E   8B83         MOV     DPH,R3
   \   000040   A3           INC     DPTR
   \   000041   A3           INC     DPTR
   \   000042   A3           INC     DPTR
   \   000043   A3           INC     DPTR
   \   000044   E0           MOVX    A,@DPTR
   \   000045   C0E0         PUSH    A
   \   000047   8A82         MOV     DPL,R2
   \   000049   8B83         MOV     DPH,R3
   \   00004B   A3           INC     DPTR
   \   00004C   A3           INC     DPTR
   \   00004D   A3           INC     DPTR
   \   00004E   A3           INC     DPTR
   \   00004F   D0E0         POP     A
   \   000051   F0           MOVX    @DPTR,A
   \   000052   8A82         MOV     DPL,R2
   \   000054   8B83         MOV     DPH,R3
   \   000056   A3           INC     DPTR
   \   000057   A3           INC     DPTR
   \   000058   A3           INC     DPTR
   \   000059   A3           INC     DPTR
   \   00005A   A3           INC     DPTR
   \   00005B   A3           INC     DPTR
   \   00005C   E0           MOVX    A,@DPTR
   \   00005D   C2E7         CLR     0xE0 /* A   */.7
   \   00005F   F0           MOVX    @DPTR,A
   \   000060   8A82         MOV     DPL,R2
   \   000062   8B83         MOV     DPH,R3
   \   000064   A3           INC     DPTR
   \   000065   A3           INC     DPTR
   \   000066   A3           INC     DPTR
   \   000067   A3           INC     DPTR
   \   000068   A3           INC     DPTR
   \   000069   A3           INC     DPTR
   \   00006A   E0           MOVX    A,@DPTR
   \   00006B   C0E0         PUSH    A
   \   00006D   8A82         MOV     DPL,R2
   \   00006F   8B83         MOV     DPH,R3
   \   000071   A3           INC     DPTR
   \   000072   A3           INC     DPTR
   \   000073   A3           INC     DPTR
   \   000074   A3           INC     DPTR
   \   000075   A3           INC     DPTR
   \   000076   A3           INC     DPTR
   \   000077   D0E0         POP     A
   \   000079   F0           MOVX    @DPTR,A
   \   00007A   8A82         MOV     DPL,R2
   \   00007C   8B83         MOV     DPH,R3
   \   00007E   A3           INC     DPTR
   \   00007F   A3           INC     DPTR
   \   000080   A3           INC     DPTR
   \   000081   A3           INC     DPTR
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   549F         ANL     A,#0x9f
   \   000087   F0           MOVX    @DPTR,A
   \   000088   8A82         MOV     DPL,R2
   \   00008A   8B83         MOV     DPH,R3
   \   00008C   A3           INC     DPTR
   \   00008D   A3           INC     DPTR
   \   00008E   A3           INC     DPTR
   \   00008F   A3           INC     DPTR
   \   000090   A3           INC     DPTR
   \   000091   A3           INC     DPTR
   \   000092   E0           MOVX    A,@DPTR
   \   000093   C0E0         PUSH    A
   \   000095   8A82         MOV     DPL,R2
   \   000097   8B83         MOV     DPH,R3
   \   000099   A3           INC     DPTR
   \   00009A   A3           INC     DPTR
   \   00009B   A3           INC     DPTR
   \   00009C   A3           INC     DPTR
   \   00009D   A3           INC     DPTR
   \   00009E   A3           INC     DPTR
   \   00009F   D0E0         POP     A
   \   0000A1   F0           MOVX    @DPTR,A
   \   0000A2   8A82         MOV     DPL,R2
   \   0000A4   8B83         MOV     DPH,R3
   \   0000A6   A3           INC     DPTR
   \   0000A7   A3           INC     DPTR
   \   0000A8   A3           INC     DPTR
   \   0000A9   A3           INC     DPTR
   \   0000AA   A3           INC     DPTR
   \   0000AB   A3           INC     DPTR
   \   0000AC   E0           MOVX    A,@DPTR
   \   0000AD   54E0         ANL     A,#0xe0
   \   0000AF   F0           MOVX    @DPTR,A
   \   0000B0   8A82         MOV     DPL,R2
   \   0000B2   8B83         MOV     DPH,R3
   \   0000B4   A3           INC     DPTR
   \   0000B5   A3           INC     DPTR
   \   0000B6   A3           INC     DPTR
   \   0000B7   A3           INC     DPTR
   \   0000B8   A3           INC     DPTR
   \   0000B9   A3           INC     DPTR
   \   0000BA   E0           MOVX    A,@DPTR
   \   0000BB   440F         ORL     A,#0xf
   \   0000BD   F0           MOVX    @DPTR,A
   \   0000BE   8A82         MOV     DPL,R2
   \   0000C0   8B83         MOV     DPH,R3
   \   0000C2   A3           INC     DPTR
   \   0000C3   A3           INC     DPTR
   \   0000C4   A3           INC     DPTR
   \   0000C5   A3           INC     DPTR
   \   0000C6   A3           INC     DPTR
   \   0000C7   A3           INC     DPTR
   \   0000C8   A3           INC     DPTR
   \   0000C9   E0           MOVX    A,@DPTR
   \   0000CA   543F         ANL     A,#0x3f
   \   0000CC   F0           MOVX    @DPTR,A
   \   0000CD   8A82         MOV     DPL,R2
   \   0000CF   8B83         MOV     DPH,R3
   \   0000D1   A3           INC     DPTR
   \   0000D2   A3           INC     DPTR
   \   0000D3   A3           INC     DPTR
   \   0000D4   A3           INC     DPTR
   \   0000D5   A3           INC     DPTR
   \   0000D6   A3           INC     DPTR
   \   0000D7   A3           INC     DPTR
   \   0000D8   E0           MOVX    A,@DPTR
   \   0000D9   D2E6         SETB    0xE0 /* A   */.6
   \   0000DB   F0           MOVX    @DPTR,A
   \   0000DC   8A82         MOV     DPL,R2
   \   0000DE   8B83         MOV     DPH,R3
   \   0000E0   A3           INC     DPTR
   \   0000E1   A3           INC     DPTR
   \   0000E2   A3           INC     DPTR
   \   0000E3   A3           INC     DPTR
   \   0000E4   A3           INC     DPTR
   \   0000E5   A3           INC     DPTR
   \   0000E6   A3           INC     DPTR
   \   0000E7   E0           MOVX    A,@DPTR
   \   0000E8   54CF         ANL     A,#0xcf
   \   0000EA   F0           MOVX    @DPTR,A
   \   0000EB   8A82         MOV     DPL,R2
   \   0000ED   8B83         MOV     DPH,R3
   \   0000EF   A3           INC     DPTR
   \   0000F0   A3           INC     DPTR
   \   0000F1   A3           INC     DPTR
   \   0000F2   A3           INC     DPTR
   \   0000F3   A3           INC     DPTR
   \   0000F4   A3           INC     DPTR
   \   0000F5   A3           INC     DPTR
   \   0000F6   E0           MOVX    A,@DPTR
   \   0000F7   C0E0         PUSH    A
   \   0000F9   8A82         MOV     DPL,R2
   \   0000FB   8B83         MOV     DPH,R3
   \   0000FD   A3           INC     DPTR
   \   0000FE   A3           INC     DPTR
   \   0000FF   A3           INC     DPTR
   \   000100   A3           INC     DPTR
   \   000101   A3           INC     DPTR
   \   000102   A3           INC     DPTR
   \   000103   A3           INC     DPTR
   \   000104   D0E0         POP     A
   \   000106   F0           MOVX    @DPTR,A
   \   000107   8A82         MOV     DPL,R2
   \   000109   8B83         MOV     DPH,R3
   \   00010B   A3           INC     DPTR
   \   00010C   A3           INC     DPTR
   \   00010D   A3           INC     DPTR
   \   00010E   A3           INC     DPTR
   \   00010F   A3           INC     DPTR
   \   000110   A3           INC     DPTR
   \   000111   A3           INC     DPTR
   \   000112   E0           MOVX    A,@DPTR
   \   000113   C2E3         CLR     0xE0 /* A   */.3
   \   000115   F0           MOVX    @DPTR,A
   \   000116   8A82         MOV     DPL,R2
   \   000118   8B83         MOV     DPH,R3
   \   00011A   A3           INC     DPTR
   \   00011B   A3           INC     DPTR
   \   00011C   A3           INC     DPTR
   \   00011D   A3           INC     DPTR
   \   00011E   A3           INC     DPTR
   \   00011F   A3           INC     DPTR
   \   000120   A3           INC     DPTR
   \   000121   E0           MOVX    A,@DPTR
   \   000122   D2E3         SETB    0xE0 /* A   */.3
   \   000124   F0           MOVX    @DPTR,A
   \   000125   8A82         MOV     DPL,R2
   \   000127   8B83         MOV     DPH,R3
   \   000129   A3           INC     DPTR
   \   00012A   A3           INC     DPTR
   \   00012B   A3           INC     DPTR
   \   00012C   A3           INC     DPTR
   \   00012D   A3           INC     DPTR
   \   00012E   A3           INC     DPTR
   \   00012F   A3           INC     DPTR
   \   000130   E0           MOVX    A,@DPTR
   \   000131   C2E2         CLR     0xE0 /* A   */.2
   \   000133   F0           MOVX    @DPTR,A
   \   000134   8A82         MOV     DPL,R2
   \   000136   8B83         MOV     DPH,R3
   \   000138   A3           INC     DPTR
   \   000139   A3           INC     DPTR
   \   00013A   A3           INC     DPTR
   \   00013B   A3           INC     DPTR
   \   00013C   A3           INC     DPTR
   \   00013D   A3           INC     DPTR
   \   00013E   A3           INC     DPTR
   \   00013F   E0           MOVX    A,@DPTR
   \   000140   C0E0         PUSH    A
   \   000142   8A82         MOV     DPL,R2
   \   000144   8B83         MOV     DPH,R3
   \   000146   A3           INC     DPTR
   \   000147   A3           INC     DPTR
   \   000148   A3           INC     DPTR
   \   000149   A3           INC     DPTR
   \   00014A   A3           INC     DPTR
   \   00014B   A3           INC     DPTR
   \   00014C   A3           INC     DPTR
   \   00014D   D0E0         POP     A
   \   00014F   F0           MOVX    @DPTR,A
   \   000150   8A82         MOV     DPL,R2
   \   000152   8B83         MOV     DPH,R3
   \   000154   A3           INC     DPTR
   \   000155   A3           INC     DPTR
   \   000156   A3           INC     DPTR
   \   000157   A3           INC     DPTR
   \   000158   A3           INC     DPTR
   \   000159   A3           INC     DPTR
   \   00015A   A3           INC     DPTR
   \   00015B   E0           MOVX    A,@DPTR
   \   00015C   54FC         ANL     A,#0xfc
   \   00015E   F0           MOVX    @DPTR,A
   \   00015F   8A82         MOV     DPL,R2
   \   000161   8B83         MOV     DPH,R3
   \   000163   A3           INC     DPTR
   \   000164   A3           INC     DPTR
   \   000165   A3           INC     DPTR
   \   000166   A3           INC     DPTR
   \   000167   A3           INC     DPTR
   \   000168   A3           INC     DPTR
   \   000169   A3           INC     DPTR
   \   00016A   E0           MOVX    A,@DPTR
   \   00016B   D2E1         SETB    0xE0 /* A   */.1
   \   00016D   F0           MOVX    @DPTR,A
   \   00016E   7A..         MOV     R2,#(dmaCh1234 + 16) & 0xff
   \   000170   7B..         MOV     R3,#((dmaCh1234 + 16) >> 8) & 0xff
   \   000172   8A82         MOV     DPL,R2
   \   000174   8B83         MOV     DPH,R3
   \   000176   7470         MOV     A,#0x70
   \   000178   F0           MOVX    @DPTR,A
   \   000179   8A82         MOV     DPL,R2
   \   00017B   8B83         MOV     DPH,R3
   \   00017D   A3           INC     DPTR
   \   00017E   74C1         MOV     A,#-0x3f
   \   000180   F0           MOVX    @DPTR,A
   \   000181   8A82         MOV     DPL,R2
   \   000183   8B83         MOV     DPH,R3
   \   000185   A3           INC     DPTR
   \   000186   A3           INC     DPTR
   \   000187   A3           INC     DPTR
   \   000188   A3           INC     DPTR
   \   000189   E0           MOVX    A,@DPTR
   \   00018A   541F         ANL     A,#0x1f
   \   00018C   F0           MOVX    @DPTR,A
   \   00018D   8A82         MOV     DPL,R2
   \   00018F   8B83         MOV     DPH,R3
   \   000191   A3           INC     DPTR
   \   000192   A3           INC     DPTR
   \   000193   A3           INC     DPTR
   \   000194   A3           INC     DPTR
   \   000195   E0           MOVX    A,@DPTR
   \   000196   C0E0         PUSH    A
   \   000198   8A82         MOV     DPL,R2
   \   00019A   8B83         MOV     DPH,R3
   \   00019C   A3           INC     DPTR
   \   00019D   A3           INC     DPTR
   \   00019E   A3           INC     DPTR
   \   00019F   A3           INC     DPTR
   \   0001A0   D0E0         POP     A
   \   0001A2   F0           MOVX    @DPTR,A
   \   0001A3   8A82         MOV     DPL,R2
   \   0001A5   8B83         MOV     DPH,R3
   \   0001A7   A3           INC     DPTR
   \   0001A8   A3           INC     DPTR
   \   0001A9   A3           INC     DPTR
   \   0001AA   A3           INC     DPTR
   \   0001AB   A3           INC     DPTR
   \   0001AC   A3           INC     DPTR
   \   0001AD   E0           MOVX    A,@DPTR
   \   0001AE   C2E7         CLR     0xE0 /* A   */.7
   \   0001B0   F0           MOVX    @DPTR,A
   \   0001B1   8A82         MOV     DPL,R2
   \   0001B3   8B83         MOV     DPH,R3
   \   0001B5   A3           INC     DPTR
   \   0001B6   A3           INC     DPTR
   \   0001B7   A3           INC     DPTR
   \   0001B8   A3           INC     DPTR
   \   0001B9   A3           INC     DPTR
   \   0001BA   A3           INC     DPTR
   \   0001BB   E0           MOVX    A,@DPTR
   \   0001BC   D2E7         SETB    0xE0 /* A   */.7
   \   0001BE   F0           MOVX    @DPTR,A
   \   0001BF   8A82         MOV     DPL,R2
   \   0001C1   8B83         MOV     DPH,R3
   \   0001C3   A3           INC     DPTR
   \   0001C4   A3           INC     DPTR
   \   0001C5   A3           INC     DPTR
   \   0001C6   A3           INC     DPTR
   \   0001C7   A3           INC     DPTR
   \   0001C8   A3           INC     DPTR
   \   0001C9   E0           MOVX    A,@DPTR
   \   0001CA   549F         ANL     A,#0x9f
   \   0001CC   F0           MOVX    @DPTR,A
   \   0001CD   8A82         MOV     DPL,R2
   \   0001CF   8B83         MOV     DPH,R3
   \   0001D1   A3           INC     DPTR
   \   0001D2   A3           INC     DPTR
   \   0001D3   A3           INC     DPTR
   \   0001D4   A3           INC     DPTR
   \   0001D5   A3           INC     DPTR
   \   0001D6   A3           INC     DPTR
   \   0001D7   E0           MOVX    A,@DPTR
   \   0001D8   D2E6         SETB    0xE0 /* A   */.6
   \   0001DA   F0           MOVX    @DPTR,A
   \   0001DB   8A82         MOV     DPL,R2
   \   0001DD   8B83         MOV     DPH,R3
   \   0001DF   A3           INC     DPTR
   \   0001E0   A3           INC     DPTR
   \   0001E1   A3           INC     DPTR
   \   0001E2   A3           INC     DPTR
   \   0001E3   A3           INC     DPTR
   \   0001E4   A3           INC     DPTR
   \   0001E5   E0           MOVX    A,@DPTR
   \   0001E6   54E0         ANL     A,#0xe0
   \   0001E8   F0           MOVX    @DPTR,A
   \   0001E9   8A82         MOV     DPL,R2
   \   0001EB   8B83         MOV     DPH,R3
   \   0001ED   A3           INC     DPTR
   \   0001EE   A3           INC     DPTR
   \   0001EF   A3           INC     DPTR
   \   0001F0   A3           INC     DPTR
   \   0001F1   A3           INC     DPTR
   \   0001F2   A3           INC     DPTR
   \   0001F3   E0           MOVX    A,@DPTR
   \   0001F4   440E         ORL     A,#0xe
   \   0001F6   F0           MOVX    @DPTR,A
   \   0001F7   8A82         MOV     DPL,R2
   \   0001F9   8B83         MOV     DPH,R3
   \   0001FB   A3           INC     DPTR
   \   0001FC   A3           INC     DPTR
   \   0001FD   A3           INC     DPTR
   \   0001FE   A3           INC     DPTR
   \   0001FF   A3           INC     DPTR
   \   000200   A3           INC     DPTR
   \   000201   A3           INC     DPTR
   \   000202   E0           MOVX    A,@DPTR
   \   000203   543F         ANL     A,#0x3f
   \   000205   F0           MOVX    @DPTR,A
   \   000206   8A82         MOV     DPL,R2
   \   000208   8B83         MOV     DPH,R3
   \   00020A   A3           INC     DPTR
   \   00020B   A3           INC     DPTR
   \   00020C   A3           INC     DPTR
   \   00020D   A3           INC     DPTR
   \   00020E   A3           INC     DPTR
   \   00020F   A3           INC     DPTR
   \   000210   A3           INC     DPTR
   \   000211   E0           MOVX    A,@DPTR
   \   000212   C0E0         PUSH    A
   \   000214   8A82         MOV     DPL,R2
   \   000216   8B83         MOV     DPH,R3
   \   000218   A3           INC     DPTR
   \   000219   A3           INC     DPTR
   \   00021A   A3           INC     DPTR
   \   00021B   A3           INC     DPTR
   \   00021C   A3           INC     DPTR
   \   00021D   A3           INC     DPTR
   \   00021E   A3           INC     DPTR
   \   00021F   D0E0         POP     A
   \   000221   F0           MOVX    @DPTR,A
   \   000222   8A82         MOV     DPL,R2
   \   000224   8B83         MOV     DPH,R3
   \   000226   A3           INC     DPTR
   \   000227   A3           INC     DPTR
   \   000228   A3           INC     DPTR
   \   000229   A3           INC     DPTR
   \   00022A   A3           INC     DPTR
   \   00022B   A3           INC     DPTR
   \   00022C   A3           INC     DPTR
   \   00022D   E0           MOVX    A,@DPTR
   \   00022E   54CF         ANL     A,#0xcf
   \   000230   F0           MOVX    @DPTR,A
   \   000231   8A82         MOV     DPL,R2
   \   000233   8B83         MOV     DPH,R3
   \   000235   A3           INC     DPTR
   \   000236   A3           INC     DPTR
   \   000237   A3           INC     DPTR
   \   000238   A3           INC     DPTR
   \   000239   A3           INC     DPTR
   \   00023A   A3           INC     DPTR
   \   00023B   A3           INC     DPTR
   \   00023C   E0           MOVX    A,@DPTR
   \   00023D   D2E4         SETB    0xE0 /* A   */.4
   \   00023F   F0           MOVX    @DPTR,A
   \   000240   78..         MOV     R0,#dmaCfg & 0xff
   \   000242   79..         MOV     R1,#(dmaCfg >> 8) & 0xff
   \   000244   E4           CLR     A
   \   000245   C9           XCH     A,R1
   \   000246   F8           MOV     R0,A
   \   000247   E8           MOV     A,R0
   \   000248   C0E0         PUSH    A
   \   00024A   8A82         MOV     DPL,R2
   \   00024C   8B83         MOV     DPH,R3
   \   00024E   A3           INC     DPTR
   \   00024F   A3           INC     DPTR
   \   000250   D0E0         POP     A
   \   000252   F0           MOVX    @DPTR,A
   \   000253   8A82         MOV     DPL,R2
   \   000255   8B83         MOV     DPH,R3
   \   000257   A3           INC     DPTR
   \   000258   A3           INC     DPTR
   \   000259   A3           INC     DPTR
   \   00025A   74..         MOV     A,#dmaCfg & 0xff
   \   00025C   F0           MOVX    @DPTR,A
   \   00025D   8A82         MOV     DPL,R2
   \   00025F   8B83         MOV     DPH,R3
   \   000261   A3           INC     DPTR
   \   000262   A3           INC     DPTR
   \   000263   A3           INC     DPTR
   \   000264   A3           INC     DPTR
   \   000265   A3           INC     DPTR
   \   000266   7400         MOV     A,#0x0
   \   000268   F0           MOVX    @DPTR,A
   \   000269   8A82         MOV     DPL,R2
   \   00026B   8B83         MOV     DPH,R3
   \   00026D   A3           INC     DPTR
   \   00026E   A3           INC     DPTR
   \   00026F   A3           INC     DPTR
   \   000270   A3           INC     DPTR
   \   000271   E0           MOVX    A,@DPTR
   \   000272   54E0         ANL     A,#0xe0
   \   000274   F0           MOVX    @DPTR,A
   \   000275   8A82         MOV     DPL,R2
   \   000277   8B83         MOV     DPH,R3
   \   000279   A3           INC     DPTR
   \   00027A   A3           INC     DPTR
   \   00027B   A3           INC     DPTR
   \   00027C   A3           INC     DPTR
   \   00027D   E0           MOVX    A,@DPTR
   \   00027E   D2E0         SETB    0xE0 /* A   */.0
   \   000280   F0           MOVX    @DPTR,A
   \   000281   8A82         MOV     DPL,R2
   \   000283   8B83         MOV     DPH,R3
   \   000285   A3           INC     DPTR
   \   000286   A3           INC     DPTR
   \   000287   A3           INC     DPTR
   \   000288   A3           INC     DPTR
   \   000289   A3           INC     DPTR
   \   00028A   A3           INC     DPTR
   \   00028B   A3           INC     DPTR
   \   00028C   E0           MOVX    A,@DPTR
   \   00028D   C2E3         CLR     0xE0 /* A   */.3
   \   00028F   F0           MOVX    @DPTR,A
   \   000290   8A82         MOV     DPL,R2
   \   000292   8B83         MOV     DPH,R3
   \   000294   A3           INC     DPTR
   \   000295   A3           INC     DPTR
   \   000296   A3           INC     DPTR
   \   000297   A3           INC     DPTR
   \   000298   A3           INC     DPTR
   \   000299   A3           INC     DPTR
   \   00029A   A3           INC     DPTR
   \   00029B   E0           MOVX    A,@DPTR
   \   00029C   C0E0         PUSH    A
   \   00029E   8A82         MOV     DPL,R2
   \   0002A0   8B83         MOV     DPH,R3
   \   0002A2   A3           INC     DPTR
   \   0002A3   A3           INC     DPTR
   \   0002A4   A3           INC     DPTR
   \   0002A5   A3           INC     DPTR
   \   0002A6   A3           INC     DPTR
   \   0002A7   A3           INC     DPTR
   \   0002A8   A3           INC     DPTR
   \   0002A9   D0E0         POP     A
   \   0002AB   F0           MOVX    @DPTR,A
   \   0002AC   8A82         MOV     DPL,R2
   \   0002AE   8B83         MOV     DPH,R3
   \   0002B0   A3           INC     DPTR
   \   0002B1   A3           INC     DPTR
   \   0002B2   A3           INC     DPTR
   \   0002B3   A3           INC     DPTR
   \   0002B4   A3           INC     DPTR
   \   0002B5   A3           INC     DPTR
   \   0002B6   A3           INC     DPTR
   \   0002B7   E0           MOVX    A,@DPTR
   \   0002B8   C2E2         CLR     0xE0 /* A   */.2
   \   0002BA   F0           MOVX    @DPTR,A
   \   0002BB   8A82         MOV     DPL,R2
   \   0002BD   8B83         MOV     DPH,R3
   \   0002BF   A3           INC     DPTR
   \   0002C0   A3           INC     DPTR
   \   0002C1   A3           INC     DPTR
   \   0002C2   A3           INC     DPTR
   \   0002C3   A3           INC     DPTR
   \   0002C4   A3           INC     DPTR
   \   0002C5   A3           INC     DPTR
   \   0002C6   E0           MOVX    A,@DPTR
   \   0002C7   C0E0         PUSH    A
   \   0002C9   8A82         MOV     DPL,R2
   \   0002CB   8B83         MOV     DPH,R3
   \   0002CD   A3           INC     DPTR
   \   0002CE   A3           INC     DPTR
   \   0002CF   A3           INC     DPTR
   \   0002D0   A3           INC     DPTR
   \   0002D1   A3           INC     DPTR
   \   0002D2   A3           INC     DPTR
   \   0002D3   A3           INC     DPTR
   \   0002D4   D0E0         POP     A
   \   0002D6   F0           MOVX    @DPTR,A
   \   0002D7   8A82         MOV     DPL,R2
   \   0002D9   8B83         MOV     DPH,R3
   \   0002DB   A3           INC     DPTR
   \   0002DC   A3           INC     DPTR
   \   0002DD   A3           INC     DPTR
   \   0002DE   A3           INC     DPTR
   \   0002DF   A3           INC     DPTR
   \   0002E0   A3           INC     DPTR
   \   0002E1   A3           INC     DPTR
   \   0002E2   E0           MOVX    A,@DPTR
   \   0002E3   54FC         ANL     A,#0xfc
   \   0002E5   F0           MOVX    @DPTR,A
   \   0002E6   8A82         MOV     DPL,R2
   \   0002E8   8B83         MOV     DPH,R3
   \   0002EA   A3           INC     DPTR
   \   0002EB   A3           INC     DPTR
   \   0002EC   A3           INC     DPTR
   \   0002ED   A3           INC     DPTR
   \   0002EE   A3           INC     DPTR
   \   0002EF   A3           INC     DPTR
   \   0002F0   A3           INC     DPTR
   \   0002F1   E0           MOVX    A,@DPTR
   \   0002F2   D2E1         SETB    0xE0 /* A   */.1
   \   0002F4   F0           MOVX    @DPTR,A
   \   0002F5   D083         POP     DPH
   \   0002F7   D082         POP     DPL
   \   0002F9   02....       LJMP    ?BRET
   \   0002FC                REQUIRE P2DIR
   \   0002FC                REQUIRE PERCFG
   \   0002FC                REQUIRE P0SEL
   \   0002FC                REQUIRE ADCCFG
   \   0002FC                REQUIRE U0CSR
   \   0002FC                REQUIRE U0UCR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTOpenDMA(halUARTCfg_t *)
   \                     HalUARTOpenDMA:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   EA           MOV     A,R2
   \   000005   241B         ADD     A,#0x1b
   \   000007   F582         MOV     DPL,A
   \   000009   E4           CLR     A
   \   00000A   3B           ADDC    A,R3
   \   00000B   F583         MOV     DPH,A
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   F8           MOV     R0,A
   \   00000F   A3           INC     DPTR
   \   000010   E0           MOVX    A,@DPTR
   \   000011   F9           MOV     R1,A
   \   000012   90....       MOV     DPTR,#dmaCfg + 1036
   \   000015   E8           MOV     A,R0
   \   000016   F0           MOVX    @DPTR,A
   \   000017   A3           INC     DPTR
   \   000018   E9           MOV     A,R1
   \   000019   F0           MOVX    @DPTR,A
   \   00001A   8A82         MOV     DPL,R2
   \   00001C   8B83         MOV     DPH,R3
   \   00001E   A3           INC     DPTR
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   6403         XRL     A,#0x3
   \   000022   600A         JZ      ??HalUARTOpenDMA_0
   \   000024   8A82         MOV     DPL,R2
   \   000026   8B83         MOV     DPH,R3
   \   000028   A3           INC     DPTR
   \   000029   E0           MOVX    A,@DPTR
   \   00002A   6404         XRL     A,#0x4
   \   00002C   7005         JNZ     ??HalUARTOpenDMA_1
   \                     ??HalUARTOpenDMA_0:
   \   00002E   75C2D8       MOV     0xc2,#-0x28
   \   000031   8003         SJMP    ??HalUARTOpenDMA_2
   \                     ??HalUARTOpenDMA_1:
   \   000033   75C23B       MOV     0xc2,#0x3b
   \                     ??HalUARTOpenDMA_2:
   \   000036   8A82         MOV     DPL,R2
   \   000038   8B83         MOV     DPH,R3
   \   00003A   A3           INC     DPTR
   \   00003B   E0           MOVX    A,@DPTR
   \   00003C   600B         JZ      ??HalUARTOpenDMA_3
   \   00003E   14           DEC     A
   \   00003F   6013         JZ      ??HalUARTOpenDMA_4
   \   000041   14           DEC     A
   \   000042   601B         JZ      ??HalUARTOpenDMA_5
   \   000044   14           DEC     A
   \   000045   6023         JZ      ??HalUARTOpenDMA_6
   \   000047   802C         SJMP    ??HalUARTOpenDMA_7
   \                     ??HalUARTOpenDMA_3:
   \   000049   75C508       MOV     0xc5,#0x8
   \   00004C   90....       MOV     DPTR,#dmaCfg + 1032
   \   00004F   7423         MOV     A,#0x23
   \   000051   F0           MOVX    @DPTR,A
   \   000052   802A         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_4:
   \   000054   75C509       MOV     0xc5,#0x9
   \   000057   90....       MOV     DPTR,#dmaCfg + 1032
   \   00005A   7412         MOV     A,#0x12
   \   00005C   F0           MOVX    @DPTR,A
   \   00005D   801F         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_5:
   \   00005F   75C50A       MOV     0xc5,#0xa
   \   000062   90....       MOV     DPTR,#dmaCfg + 1032
   \   000065   7409         MOV     A,#0x9
   \   000067   F0           MOVX    @DPTR,A
   \   000068   8014         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_6:
   \   00006A   75C50A       MOV     0xc5,#0xa
   \   00006D   90....       MOV     DPTR,#dmaCfg + 1032
   \   000070   7406         MOV     A,#0x6
   \   000072   F0           MOVX    @DPTR,A
   \   000073   8009         SJMP    ??HalUARTOpenDMA_8
   \                     ??HalUARTOpenDMA_7:
   \   000075   75C50B       MOV     0xc5,#0xb
   \   000078   90....       MOV     DPTR,#dmaCfg + 1032
   \   00007B   7403         MOV     A,#0x3
   \   00007D   F0           MOVX    @DPTR,A
   \                     ??HalUARTOpenDMA_8:
   \   00007E   8A82         MOV     DPL,R2
   \   000080   8B83         MOV     DPH,R3
   \   000082   A3           INC     DPTR
   \   000083   A3           INC     DPTR
   \   000084   E0           MOVX    A,@DPTR
   \   000085   600D         JZ      ??HalUARTOpenDMA_9
   \   000087   75C442       MOV     0xc4,#0x42
   \   00008A   43F310       ORL     0xf3,#0x10
   \   00008D   C285         CLR     0x80.5
   \   00008F   43FD20       ORL     0xfd,#0x20
   \   000092   8003         SJMP    ??HalUARTOpenDMA_10
   \                     ??HalUARTOpenDMA_9:
   \   000094   75C402       MOV     0xc4,#0x2
   \                     ??HalUARTOpenDMA_10:
   \   000097   9070C1       MOV     DPTR,#0x70c1
   \   00009A   E0           MOVX    A,@DPTR
   \   00009B   F8           MOV     R0,A
   \   00009C   7900         MOV     R1,#0x0
   \   00009E   90....       MOV     DPTR,#dmaCfg
   \   0000A1   E8           MOV     A,R0
   \   0000A2   F0           MOVX    @DPTR,A
   \   0000A3   A3           INC     DPTR
   \   0000A4   E9           MOV     A,R1
   \   0000A5   F0           MOVX    @DPTR,A
   \   0000A6   75D1F7       MOV     0xd1,#-0x9
   \   0000A9   75D608       MOV     0xd6,#0x8
   \   0000AC                ; Setup parameters for call to function osal_memset
   \   0000AC   7C00         MOV     R4,#0x0
   \   0000AE   7D02         MOV     R5,#0x2
   \   0000B0   E5C2         MOV     A,0xc2
   \   0000B2   64FF         XRL     A,#0xff
   \   0000B4   F9           MOV     R1,A
   \   0000B5   7A..         MOV     R2,#dmaCfg & 0xff
   \   0000B7   7B..         MOV     R3,#(dmaCfg >> 8) & 0xff
   \   0000B9   12....       LCALL   `??osal_memset::?relay`; Banked call to: osal_memset
   \   0000BC   438640       ORL     0x86,#0x40
   \   0000BF   90....       MOV     DPTR,#dmaCfg + 1035
   \   0000C2   7400         MOV     A,#0x0
   \   0000C4   F0           MOVX    @DPTR,A
   \   0000C5   90....       MOV     DPTR,#dmaCfg + 1034
   \   0000C8   7400         MOV     A,#0x0
   \   0000CA   F0           MOVX    @DPTR,A
   \   0000CB   D083         POP     DPH
   \   0000CD   D082         POP     DPL
   \   0000CF   02....       LJMP    ?BRET
   \   0000D2                REQUIRE U0BAUD
   \   0000D2                REQUIRE U0GCR
   \   0000D2                REQUIRE U0UCR
   \   0000D2                REQUIRE P0SEL
   \   0000D2                REQUIRE _A_P0
   \   0000D2                REQUIRE P0DIR
   \   0000D2                REQUIRE DMAIRQ
   \   0000D2                REQUIRE DMAARM
   \   0000D2                REQUIRE U0CSR

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint16 HalUARTReadDMA(unsigned char *, uint16)
   \                     HalUARTReadDMA:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000   74F5         MOV     A,#-0xb
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   7800         MOV     R0,#0x0
   \   000007   7900         MOV     R1,#0x0
   \   000009   02....       LJMP    ??HalUARTReadDMA_0 & 0xFFFF
   \                     ??HalUARTReadDMA_1:
   \   00000C   90....       MOV     DPTR,#dmaCfg + 512
   \   00000F   E0           MOVX    A,@DPTR
   \   000010   FE           MOV     R6,A
   \   000011   7F00         MOV     R7,#0x0
   \   000013   EE           MOV     A,R6
   \   000014   75F002       MOV     B,#0x2
   \   000017   A4           MUL     AB
   \   000018   CE           XCH     A,R6
   \   000019   85F0..       MOV     ?V0,B
   \   00001C   75F000       MOV     B,#0x0
   \   00001F   A4           MUL     AB
   \   000020   25..         ADD     A,?V0
   \   000022   F5..         MOV     ?V0,A
   \   000024   75F002       MOV     B,#0x2
   \   000027   EF           MOV     A,R7
   \   000028   A4           MUL     AB
   \   000029   25..         ADD     A,?V0
   \   00002B   FF           MOV     R7,A
   \   00002C   74..         MOV     A,#dmaCfg & 0xff
   \   00002E   2E           ADD     A,R6
   \   00002F   F582         MOV     DPL,A
   \   000031   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000033   3F           ADDC    A,R7
   \   000034   F583         MOV     DPH,A
   \   000036   E0           MOVX    A,@DPTR
   \   000037   FE           MOV     R6,A
   \   000038   A3           INC     DPTR
   \   000039   E0           MOVX    A,@DPTR
   \   00003A   FF           MOV     R7,A
   \   00003B   EE           MOV     A,R6
   \   00003C   C0E0         PUSH    A
   \   00003E   8A82         MOV     DPL,R2
   \   000040   8B83         MOV     DPH,R3
   \   000042   D0E0         POP     A
   \   000044   F0           MOVX    @DPTR,A
   \   000045   8A82         MOV     DPL,R2
   \   000047   8B83         MOV     DPH,R3
   \   000049   A3           INC     DPTR
   \   00004A   AA82         MOV     R2,DPL
   \   00004C   AB83         MOV     R3,DPH
   \   00004E   E5C2         MOV     A,0xc2
   \   000050   FE           MOV     R6,A
   \   000051   7F00         MOV     R7,#0x0
   \   000053   EE           MOV     A,R6
   \   000054   64FF         XRL     A,#0xff
   \   000056   F5..         MOV     ?V0,A
   \   000058   EF           MOV     A,R7
   \   000059   6400         XRL     A,#0x0
   \   00005B   F5..         MOV     ?V1,A
   \   00005D   E4           CLR     A
   \   00005E   C5..         XCH     A,?V0
   \   000060   F5..         MOV     ?V1,A
   \   000062   90....       MOV     DPTR,#dmaCfg + 512
   \   000065   E0           MOVX    A,@DPTR
   \   000066   FE           MOV     R6,A
   \   000067   7F00         MOV     R7,#0x0
   \   000069   EE           MOV     A,R6
   \   00006A   75F002       MOV     B,#0x2
   \   00006D   A4           MUL     AB
   \   00006E   CE           XCH     A,R6
   \   00006F   85F0..       MOV     ?V2,B
   \   000072   75F000       MOV     B,#0x0
   \   000075   A4           MUL     AB
   \   000076   25..         ADD     A,?V2
   \   000078   F5..         MOV     ?V2,A
   \   00007A   75F002       MOV     B,#0x2
   \   00007D   EF           MOV     A,R7
   \   00007E   A4           MUL     AB
   \   00007F   25..         ADD     A,?V2
   \   000081   FF           MOV     R7,A
   \   000082   74..         MOV     A,#dmaCfg & 0xff
   \   000084   2E           ADD     A,R6
   \   000085   F582         MOV     DPL,A
   \   000087   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000089   3F           ADDC    A,R7
   \   00008A   F583         MOV     DPH,A
   \   00008C   E5..         MOV     A,?V0
   \   00008E   F0           MOVX    @DPTR,A
   \   00008F   A3           INC     DPTR
   \   000090   E5..         MOV     A,?V1
   \   000092   F0           MOVX    @DPTR,A
   \   000093   90....       MOV     DPTR,#dmaCfg + 512
   \   000096   E0           MOVX    A,@DPTR
   \   000097   2401         ADD     A,#0x1
   \   000099   F0           MOVX    @DPTR,A
   \   00009A   08           INC     R0
   \   00009B   E8           MOV     A,R0
   \   00009C   7001         JNZ     ??HalUARTReadDMA_0
   \   00009E   09           INC     R1
   \                     ??HalUARTReadDMA_0:
   \   00009F   C3           CLR     C
   \   0000A0   E8           MOV     A,R0
   \   0000A1   9C           SUBB    A,R4
   \   0000A2   E9           MOV     A,R1
   \   0000A3   9D           SUBB    A,R5
   \   0000A4   503A         JNC     ??HalUARTReadDMA_2
   \   0000A6   90....       MOV     DPTR,#dmaCfg + 512
   \   0000A9   E0           MOVX    A,@DPTR
   \   0000AA   FE           MOV     R6,A
   \   0000AB   7F00         MOV     R7,#0x0
   \   0000AD   EE           MOV     A,R6
   \   0000AE   75F002       MOV     B,#0x2
   \   0000B1   A4           MUL     AB
   \   0000B2   CE           XCH     A,R6
   \   0000B3   85F0..       MOV     ?V0,B
   \   0000B6   75F000       MOV     B,#0x0
   \   0000B9   A4           MUL     AB
   \   0000BA   25..         ADD     A,?V0
   \   0000BC   F5..         MOV     ?V0,A
   \   0000BE   75F002       MOV     B,#0x2
   \   0000C1   EF           MOV     A,R7
   \   0000C2   A4           MUL     AB
   \   0000C3   25..         ADD     A,?V0
   \   0000C5   FF           MOV     R7,A
   \   0000C6   74..         MOV     A,#dmaCfg & 0xff
   \   0000C8   2E           ADD     A,R6
   \   0000C9   F582         MOV     DPL,A
   \   0000CB   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   0000CD   3F           ADDC    A,R7
   \   0000CE   F583         MOV     DPH,A
   \   0000D0   E0           MOVX    A,@DPTR
   \   0000D1   FE           MOV     R6,A
   \   0000D2   A3           INC     DPTR
   \   0000D3   E0           MOVX    A,@DPTR
   \   0000D4   FF           MOV     R7,A
   \   0000D5   E4           CLR     A
   \   0000D6   CF           XCH     A,R7
   \   0000D7   FE           MOV     R6,A
   \   0000D8   EE           MOV     A,R6
   \   0000D9   65C2         XRL     A,0xc2
   \   0000DB   7003         JNZ     $+5
   \   0000DD   02....       LJMP    ??HalUARTReadDMA_1 & 0xFFFF
   \                     ??HalUARTReadDMA_2:
   \   0000E0   C285         CLR     0x80.5
   \   0000E2   E8           MOV     A,R0
   \   0000E3   FA           MOV     R2,A
   \   0000E4   E9           MOV     A,R1
   \   0000E5   FB           MOV     R3,A
   \   0000E6   7F03         MOV     R7,#0x3
   \   0000E8   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   0000EB                REQUIRE U0BAUD
   \   0000EB                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint16 HalUARTWriteDMA(unsigned char *, uint16)
   \                     HalUARTWriteDMA:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000                REQUIRE ?V2
   \   000000                REQUIRE ?V3
   \   000000                REQUIRE ?V4
   \   000000                REQUIRE ?V5
   \   000000   74F2         MOV     A,#-0xe
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 14
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   F8           MOV     R0,A
   \   000007   EB           MOV     A,R3
   \   000008   F9           MOV     R1,A
   \   000009   90....       MOV     DPTR,#dmaCfg + 1030
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   FA           MOV     R2,A
   \   00000E   7B00         MOV     R3,#0x0
   \   000010   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000012   2A           ADD     A,R2
   \   000013   F582         MOV     DPL,A
   \   000015   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000017   3B           ADDC    A,R3
   \   000018   F583         MOV     DPH,A
   \   00001A   E0           MOVX    A,@DPTR
   \   00001B   FA           MOV     R2,A
   \   00001C   7B00         MOV     R3,#0x0
   \   00001E   EC           MOV     A,R4
   \   00001F   2A           ADD     A,R2
   \   000020   FA           MOV     R2,A
   \   000021   ED           MOV     A,R5
   \   000022   3B           ADDC    A,R3
   \   000023   FB           MOV     R3,A
   \   000024   C3           CLR     C
   \   000025   EA           MOV     A,R2
   \   000026   9401         SUBB    A,#0x1
   \   000028   EB           MOV     A,R3
   \   000029   9401         SUBB    A,#0x1
   \   00002B   4007         JC      ??HalUARTWriteDMA_0
   \   00002D   7A00         MOV     R2,#0x0
   \   00002F   7B00         MOV     R3,#0x0
   \   000031   02....       LJMP    ??HalUARTWriteDMA_1 & 0xFFFF
   \                     ??HalUARTWriteDMA_0:
   \   000034   A2AF         MOV     C,0xa8.7
   \   000036   E4           CLR     A
   \   000037   33           RLC     A
   \   000038   FE           MOV     R6,A
   \   000039   C2AF         CLR     0xa8.7
   \   00003B   90....       MOV     DPTR,#dmaCfg + 1030
   \   00003E   E0           MOVX    A,@DPTR
   \   00003F   F5..         MOV     ?V4,A
   \   000041   AA..         MOV     R2,?V4
   \   000043   7B00         MOV     R3,#0x0
   \   000045   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000047   2A           ADD     A,R2
   \   000048   F582         MOV     DPL,A
   \   00004A   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   00004C   3B           ADDC    A,R3
   \   00004D   F583         MOV     DPH,A
   \   00004F   E0           MOVX    A,@DPTR
   \   000050   F5..         MOV     ?V3,A
   \   000052   8E..         MOV     ?V2,R6
   \   000054   EE           MOV     A,R6
   \   000055   A2E0         MOV     C,0xE0 /* A   */.0
   \   000057   92AF         MOV     0xa8.7,C
   \   000059   7A00         MOV     R2,#0x0
   \   00005B   7B00         MOV     R3,#0x0
   \   00005D   804E         SJMP    ??HalUARTWriteDMA_2
   \                     ??HalUARTWriteDMA_3:
   \   00005F   E8           MOV     A,R0
   \   000060   2A           ADD     A,R2
   \   000061   F582         MOV     DPL,A
   \   000063   E9           MOV     A,R1
   \   000064   3B           ADDC    A,R3
   \   000065   F583         MOV     DPH,A
   \   000067   E0           MOVX    A,@DPTR
   \   000068   C0E0         PUSH    A
   \   00006A   AE..         MOV     R6,?V4
   \   00006C   7F00         MOV     R7,#0x0
   \   00006E   EE           MOV     A,R6
   \   00006F   75F000       MOV     B,#0x0
   \   000072   A4           MUL     AB
   \   000073   CE           XCH     A,R6
   \   000074   85F0..       MOV     ?V0,B
   \   000077   75F001       MOV     B,#0x1
   \   00007A   A4           MUL     AB
   \   00007B   25..         ADD     A,?V0
   \   00007D   F5..         MOV     ?V0,A
   \   00007F   75F000       MOV     B,#0x0
   \   000082   EF           MOV     A,R7
   \   000083   A4           MUL     AB
   \   000084   25..         ADD     A,?V0
   \   000086   FF           MOV     R7,A
   \   000087   85....       MOV     ?V0,?V3
   \   00008A   75..00       MOV     ?V1,#0x0
   \   00008D   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   00008F   25..         ADD     A,?V0
   \   000091   F5..         MOV     ?V0,A
   \   000093   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   000095   35..         ADDC    A,?V1
   \   000097   F5..         MOV     ?V1,A
   \   000099   E5..         MOV     A,?V0
   \   00009B   2E           ADD     A,R6
   \   00009C   F582         MOV     DPL,A
   \   00009E   E5..         MOV     A,?V1
   \   0000A0   3F           ADDC    A,R7
   \   0000A1   F583         MOV     DPH,A
   \   0000A3   D0E0         POP     A
   \   0000A5   F0           MOVX    @DPTR,A
   \   0000A6   05..         INC     ?V3
   \   0000A8   0A           INC     R2
   \   0000A9   EA           MOV     A,R2
   \   0000AA   7001         JNZ     ??HalUARTWriteDMA_2
   \   0000AC   0B           INC     R3
   \                     ??HalUARTWriteDMA_2:
   \   0000AD   C3           CLR     C
   \   0000AE   EA           MOV     A,R2
   \   0000AF   9C           SUBB    A,R4
   \   0000B0   EB           MOV     A,R3
   \   0000B1   9D           SUBB    A,R5
   \   0000B2   40AB         JC      ??HalUARTWriteDMA_3
   \   0000B4   A2AF         MOV     C,0xa8.7
   \   0000B6   E4           CLR     A
   \   0000B7   33           RLC     A
   \   0000B8   FE           MOV     R6,A
   \   0000B9   C2AF         CLR     0xa8.7
   \   0000BB   90....       MOV     DPTR,#dmaCfg + 1030
   \   0000BE   E0           MOVX    A,@DPTR
   \   0000BF   65..         XRL     A,?V4
   \   0000C1   7003         JNZ     $+5
   \   0000C3   02....       LJMP    ??HalUARTWriteDMA_4 & 0xFFFF
   \   0000C6   8E..         MOV     ?V5,R6
   \   0000C8   EE           MOV     A,R6
   \   0000C9   A2E0         MOV     C,0xE0 /* A   */.0
   \   0000CB   92AF         MOV     0xa8.7,C
   \   0000CD   90....       MOV     DPTR,#dmaCfg + 1030
   \   0000D0   E0           MOVX    A,@DPTR
   \   0000D1   F5..         MOV     ?V4,A
   \   0000D3   AA..         MOV     R2,?V4
   \   0000D5   7B00         MOV     R3,#0x0
   \   0000D7   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   0000D9   2A           ADD     A,R2
   \   0000DA   F582         MOV     DPL,A
   \   0000DC   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   0000DE   3B           ADDC    A,R3
   \   0000DF   F583         MOV     DPH,A
   \   0000E1   E0           MOVX    A,@DPTR
   \   0000E2   F5..         MOV     ?V3,A
   \   0000E4   7A00         MOV     R2,#0x0
   \   0000E6   7B00         MOV     R3,#0x0
   \   0000E8   804E         SJMP    ??HalUARTWriteDMA_5
   \                     ??HalUARTWriteDMA_6:
   \   0000EA   E8           MOV     A,R0
   \   0000EB   2A           ADD     A,R2
   \   0000EC   F582         MOV     DPL,A
   \   0000EE   E9           MOV     A,R1
   \   0000EF   3B           ADDC    A,R3
   \   0000F0   F583         MOV     DPH,A
   \   0000F2   E0           MOVX    A,@DPTR
   \   0000F3   C0E0         PUSH    A
   \   0000F5   AE..         MOV     R6,?V4
   \   0000F7   7F00         MOV     R7,#0x0
   \   0000F9   EE           MOV     A,R6
   \   0000FA   75F000       MOV     B,#0x0
   \   0000FD   A4           MUL     AB
   \   0000FE   CE           XCH     A,R6
   \   0000FF   85F0..       MOV     ?V0,B
   \   000102   75F001       MOV     B,#0x1
   \   000105   A4           MUL     AB
   \   000106   25..         ADD     A,?V0
   \   000108   F5..         MOV     ?V0,A
   \   00010A   75F000       MOV     B,#0x0
   \   00010D   EF           MOV     A,R7
   \   00010E   A4           MUL     AB
   \   00010F   25..         ADD     A,?V0
   \   000111   FF           MOV     R7,A
   \   000112   85....       MOV     ?V0,?V3
   \   000115   75..00       MOV     ?V1,#0x0
   \   000118   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   00011A   25..         ADD     A,?V0
   \   00011C   F5..         MOV     ?V0,A
   \   00011E   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   000120   35..         ADDC    A,?V1
   \   000122   F5..         MOV     ?V1,A
   \   000124   E5..         MOV     A,?V0
   \   000126   2E           ADD     A,R6
   \   000127   F582         MOV     DPL,A
   \   000129   E5..         MOV     A,?V1
   \   00012B   3F           ADDC    A,R7
   \   00012C   F583         MOV     DPH,A
   \   00012E   D0E0         POP     A
   \   000130   F0           MOVX    @DPTR,A
   \   000131   05..         INC     ?V3
   \   000133   0A           INC     R2
   \   000134   EA           MOV     A,R2
   \   000135   7001         JNZ     ??HalUARTWriteDMA_5
   \   000137   0B           INC     R3
   \                     ??HalUARTWriteDMA_5:
   \   000138   C3           CLR     C
   \   000139   EA           MOV     A,R2
   \   00013A   9C           SUBB    A,R4
   \   00013B   EB           MOV     A,R3
   \   00013C   9D           SUBB    A,R5
   \   00013D   40AB         JC      ??HalUARTWriteDMA_6
   \   00013F   A2AF         MOV     C,0xa8.7
   \   000141   E4           CLR     A
   \   000142   33           RLC     A
   \   000143   FE           MOV     R6,A
   \   000144   C2AF         CLR     0xa8.7
   \                     ??HalUARTWriteDMA_4:
   \   000146   E5..         MOV     A,?V3
   \   000148   C0E0         PUSH    A
   \   00014A   A8..         MOV     R0,?V4
   \   00014C   7900         MOV     R1,#0x0
   \   00014E   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000150   28           ADD     A,R0
   \   000151   F582         MOV     DPL,A
   \   000153   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000155   39           ADDC    A,R1
   \   000156   F583         MOV     DPH,A
   \   000158   D0E0         POP     A
   \   00015A   F0           MOVX    @DPTR,A
   \   00015B   7401         MOV     A,#0x1
   \   00015D   65..         XRL     A,?V4
   \   00015F   F8           MOV     R0,A
   \   000160   7900         MOV     R1,#0x0
   \   000162   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000164   28           ADD     A,R0
   \   000165   F582         MOV     DPL,A
   \   000167   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000169   39           ADDC    A,R1
   \   00016A   F583         MOV     DPH,A
   \   00016C   E0           MOVX    A,@DPTR
   \   00016D   7006         JNZ     ??HalUARTWriteDMA_7
   \   00016F   90....       MOV     DPTR,#dmaCfg + 1035
   \   000172   7401         MOV     A,#0x1
   \   000174   F0           MOVX    @DPTR,A
   \                     ??HalUARTWriteDMA_7:
   \   000175   EE           MOV     A,R6
   \   000176   F8           MOV     R0,A
   \   000177   EE           MOV     A,R6
   \   000178   A2E0         MOV     C,0xE0 /* A   */.0
   \   00017A   92AF         MOV     0xa8.7,C
   \                     ??HalUARTWriteDMA_1:
   \   00017C   7F06         MOV     R7,#0x6
   \   00017E   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000181                REQUIRE _A_IEN0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTPollDMA(void)
   \                     HalUARTPollDMA:
   \   000000                REQUIRE ?V0
   \   000000                REQUIRE ?V1
   \   000000   74F6         MOV     A,#-0xa
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 10
   \   000005                ; Auto size: 0
   \   000005   7A00         MOV     R2,#0x0
   \   000007   7B00         MOV     R3,#0x0
   \   000009   7E00         MOV     R6,#0x0
   \   00000B   90....       MOV     DPTR,#dmaCfg + 512
   \   00000E   E0           MOVX    A,@DPTR
   \   00000F   F8           MOV     R0,A
   \   000010   7900         MOV     R1,#0x0
   \   000012   E8           MOV     A,R0
   \   000013   75F002       MOV     B,#0x2
   \   000016   A4           MUL     AB
   \   000017   C8           XCH     A,R0
   \   000018   ACF0         MOV     R4,B
   \   00001A   75F000       MOV     B,#0x0
   \   00001D   A4           MUL     AB
   \   00001E   2C           ADD     A,R4
   \   00001F   FC           MOV     R4,A
   \   000020   75F002       MOV     B,#0x2
   \   000023   E9           MOV     A,R1
   \   000024   A4           MUL     AB
   \   000025   2C           ADD     A,R4
   \   000026   F9           MOV     R1,A
   \   000027   74..         MOV     A,#dmaCfg & 0xff
   \   000029   28           ADD     A,R0
   \   00002A   F582         MOV     DPL,A
   \   00002C   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   00002E   39           ADDC    A,R1
   \   00002F   F583         MOV     DPH,A
   \   000031   E0           MOVX    A,@DPTR
   \   000032   F8           MOV     R0,A
   \   000033   A3           INC     DPTR
   \   000034   E0           MOVX    A,@DPTR
   \   000035   F9           MOV     R1,A
   \   000036   E4           CLR     A
   \   000037   C9           XCH     A,R1
   \   000038   F8           MOV     R0,A
   \   000039   E8           MOV     A,R0
   \   00003A   65C2         XRL     A,0xc2
   \   00003C   7061         JNZ     ??HalUARTPollDMA_0
   \   00003E                ; Setup parameters for call to function findTail
   \   00003E   12....       LCALL   `??findTail::?relay` ; Banked call to: findTail
   \   000041   E9           MOV     A,R1
   \   000042   F8           MOV     R0,A
   \   000043   90....       MOV     DPTR,#dmaCfg + 513
   \   000046   E0           MOVX    A,@DPTR
   \   000047   68           XRL     A,R0
   \   000048   6019         JZ      ??HalUARTPollDMA_1
   \   00004A   E8           MOV     A,R0
   \   00004B   90....       MOV     DPTR,#dmaCfg + 513
   \   00004E   F0           MOVX    @DPTR,A
   \   00004F   90....       MOV     DPTR,#dmaCfg + 514
   \   000052   E0           MOVX    A,@DPTR
   \   000053   7006         JNZ     ??HalUARTPollDMA_2
   \   000055   E595         MOV     A,0x95
   \   000057   90....       MOV     DPTR,#dmaCfg + 515
   \   00005A   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_2:
   \   00005B   90....       MOV     DPTR,#dmaCfg + 514
   \   00005E   7421         MOV     A,#0x21
   \   000060   F0           MOVX    @DPTR,A
   \   000061   802F         SJMP    ??HalUARTPollDMA_3
   \                     ??HalUARTPollDMA_1:
   \   000063   90....       MOV     DPTR,#dmaCfg + 514
   \   000066   E0           MOVX    A,@DPTR
   \   000067   6029         JZ      ??HalUARTPollDMA_3
   \   000069   90....       MOV     DPTR,#dmaCfg + 515
   \   00006C   E0           MOVX    A,@DPTR
   \   00006D   F8           MOV     R0,A
   \   00006E   E595         MOV     A,0x95
   \   000070   C3           CLR     C
   \   000071   98           SUBB    A,R0
   \   000072   F8           MOV     R0,A
   \   000073   90....       MOV     DPTR,#dmaCfg + 514
   \   000076   E0           MOVX    A,@DPTR
   \   000077   F9           MOV     R1,A
   \   000078   E8           MOV     A,R0
   \   000079   C3           CLR     C
   \   00007A   99           SUBB    A,R1
   \   00007B   500F         JNC     ??HalUARTPollDMA_4
   \   00007D   90....       MOV     DPTR,#dmaCfg + 514
   \   000080   E0           MOVX    A,@DPTR
   \   000081   C3           CLR     C
   \   000082   98           SUBB    A,R0
   \   000083   F0           MOVX    @DPTR,A
   \   000084   E595         MOV     A,0x95
   \   000086   90....       MOV     DPTR,#dmaCfg + 515
   \   000089   F0           MOVX    @DPTR,A
   \   00008A   8006         SJMP    ??HalUARTPollDMA_3
   \                     ??HalUARTPollDMA_4:
   \   00008C   90....       MOV     DPTR,#dmaCfg + 514
   \   00008F   7400         MOV     A,#0x0
   \   000091   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_3:
   \   000092                ; Setup parameters for call to function HalUARTRxAvailDMA
   \   000092   12....       LCALL   `??HalUARTRxAvailDMA::?relay`; Banked call to: HalUARTRxAvailDMA
   \   000095   8A..         MOV     ?V0,R2
   \   000097   8B..         MOV     ?V1,R3
   \   000099   AA..         MOV     R2,?V0
   \   00009B   AB..         MOV     R3,?V1
   \   00009D   8006         SJMP    ??HalUARTPollDMA_5
   \                     ??HalUARTPollDMA_0:
   \   00009F   90....       MOV     DPTR,#dmaCfg + 514
   \   0000A2   7400         MOV     A,#0x0
   \   0000A4   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_5:
   \   0000A5   C3           CLR     C
   \   0000A6   EA           MOV     A,R2
   \   0000A7   94F0         SUBB    A,#-0x10
   \   0000A9   EB           MOV     A,R3
   \   0000AA   9400         SUBB    A,#0x0
   \   0000AC   4004         JC      ??HalUARTPollDMA_6
   \   0000AE   7E01         MOV     R6,#0x1
   \   0000B0   801B         SJMP    ??HalUARTPollDMA_7
   \                     ??HalUARTPollDMA_6:
   \   0000B2   C3           CLR     C
   \   0000B3   EA           MOV     A,R2
   \   0000B4   9470         SUBB    A,#0x70
   \   0000B6   EB           MOV     A,R3
   \   0000B7   9400         SUBB    A,#0x0
   \   0000B9   4006         JC      ??HalUARTPollDMA_8
   \   0000BB   7E02         MOV     R6,#0x2
   \   0000BD   D285         SETB    0x80.5
   \   0000BF   800C         SJMP    ??HalUARTPollDMA_7
   \                     ??HalUARTPollDMA_8:
   \   0000C1   EA           MOV     A,R2
   \   0000C2   4B           ORL     A,R3
   \   0000C3   6008         JZ      ??HalUARTPollDMA_7
   \   0000C5   90....       MOV     DPTR,#dmaCfg + 514
   \   0000C8   E0           MOVX    A,@DPTR
   \   0000C9   7002         JNZ     ??HalUARTPollDMA_7
   \   0000CB   7E04         MOV     R6,#0x4
   \                     ??HalUARTPollDMA_7:
   \   0000CD   90....       MOV     DPTR,#dmaCfg + 1031
   \   0000D0   E0           MOVX    A,@DPTR
   \   0000D1   600B         JZ      ??HalUARTPollDMA_9
   \   0000D3   90....       MOV     DPTR,#dmaCfg + 1031
   \   0000D6   7400         MOV     A,#0x0
   \   0000D8   F0           MOVX    @DPTR,A
   \   0000D9   D3           SETB    C
   \   0000DA   EE           MOV     A,R6
   \   0000DB   92E4         MOV     0xE0 /* A   */.4,C
   \   0000DD   FE           MOV     R6,A
   \                     ??HalUARTPollDMA_9:
   \   0000DE   90....       MOV     DPTR,#dmaCfg + 1034
   \   0000E1   E0           MOVX    A,@DPTR
   \   0000E2   6018         JZ      ??HalUARTPollDMA_10
   \   0000E4   A895         MOV     R0,0x95+0x0
   \   0000E6   90....       MOV     DPTR,#dmaCfg + 1033
   \   0000E9   E0           MOVX    A,@DPTR
   \   0000EA   C8           XCH     A,R0
   \   0000EB   C3           CLR     C
   \   0000EC   98           SUBB    A,R0
   \   0000ED   F8           MOV     R0,A
   \   0000EE   90....       MOV     DPTR,#dmaCfg + 1032
   \   0000F1   E0           MOVX    A,@DPTR
   \   0000F2   C3           CLR     C
   \   0000F3   98           SUBB    A,R0
   \   0000F4   5006         JNC     ??HalUARTPollDMA_10
   \   0000F6   90....       MOV     DPTR,#dmaCfg + 1034
   \   0000F9   7400         MOV     A,#0x0
   \   0000FB   F0           MOVX    @DPTR,A
   \                     ??HalUARTPollDMA_10:
   \   0000FC   90....       MOV     DPTR,#dmaCfg + 1035
   \   0000FF   E0           MOVX    A,@DPTR
   \   000100   7003         JNZ     $+5
   \   000102   02....       LJMP    ??HalUARTPollDMA_11 & 0xFFFF
   \   000105   90....       MOV     DPTR,#dmaCfg + 1034
   \   000108   E0           MOVX    A,@DPTR
   \   000109   6003         JZ      $+5
   \   00010B   02....       LJMP    ??HalUARTPollDMA_11 & 0xFFFF
   \   00010E   7C..         MOV     R4,#(dmaCh1234 + 24) & 0xff
   \   000110   7D..         MOV     R5,#((dmaCh1234 + 24) >> 8) & 0xff
   \   000112   90....       MOV     DPTR,#dmaCfg + 1035
   \   000115   7400         MOV     A,#0x0
   \   000117   F0           MOVX    @DPTR,A
   \   000118   90....       MOV     DPTR,#dmaCfg + 1030
   \   00011B   E0           MOVX    A,@DPTR
   \   00011C   F8           MOV     R0,A
   \   00011D   7900         MOV     R1,#0x0
   \   00011F   E8           MOV     A,R0
   \   000120   75F000       MOV     B,#0x0
   \   000123   A4           MUL     AB
   \   000124   C8           XCH     A,R0
   \   000125   AAF0         MOV     R2,B
   \   000127   75F001       MOV     B,#0x1
   \   00012A   A4           MUL     AB
   \   00012B   2A           ADD     A,R2
   \   00012C   FA           MOV     R2,A
   \   00012D   75F000       MOV     B,#0x0
   \   000130   E9           MOV     A,R1
   \   000131   A4           MUL     AB
   \   000132   2A           ADD     A,R2
   \   000133   F9           MOV     R1,A
   \   000134   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000136   28           ADD     A,R0
   \   000137   F8           MOV     R0,A
   \   000138   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   00013A   39           ADDC    A,R1
   \   00013B   F9           MOV     R1,A
   \   00013C   E4           CLR     A
   \   00013D   C9           XCH     A,R1
   \   00013E   F8           MOV     R0,A
   \   00013F   E8           MOV     A,R0
   \   000140   C0E0         PUSH    A
   \   000142   8C82         MOV     DPL,R4
   \   000144   8D83         MOV     DPH,R5
   \   000146   D0E0         POP     A
   \   000148   F0           MOVX    @DPTR,A
   \   000149   90....       MOV     DPTR,#dmaCfg + 1030
   \   00014C   E0           MOVX    A,@DPTR
   \   00014D   F8           MOV     R0,A
   \   00014E   7900         MOV     R1,#0x0
   \   000150   E8           MOV     A,R0
   \   000151   75F000       MOV     B,#0x0
   \   000154   A4           MUL     AB
   \   000155   C8           XCH     A,R0
   \   000156   AAF0         MOV     R2,B
   \   000158   75F001       MOV     B,#0x1
   \   00015B   A4           MUL     AB
   \   00015C   2A           ADD     A,R2
   \   00015D   FA           MOV     R2,A
   \   00015E   75F000       MOV     B,#0x0
   \   000161   E9           MOV     A,R1
   \   000162   A4           MUL     AB
   \   000163   2A           ADD     A,R2
   \   000164   F9           MOV     R1,A
   \   000165   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000167   28           ADD     A,R0
   \   000168   F8           MOV     R0,A
   \   000169   74..         MOV     A,#((dmaCfg + 516) >> 8) & 0xff
   \   00016B   39           ADDC    A,R1
   \   00016C   F9           MOV     R1,A
   \   00016D   E8           MOV     A,R0
   \   00016E   C0E0         PUSH    A
   \   000170   8C82         MOV     DPL,R4
   \   000172   8D83         MOV     DPH,R5
   \   000174   A3           INC     DPTR
   \   000175   D0E0         POP     A
   \   000177   F0           MOVX    @DPTR,A
   \   000178   90....       MOV     DPTR,#dmaCfg + 1030
   \   00017B   E0           MOVX    A,@DPTR
   \   00017C   F8           MOV     R0,A
   \   00017D   7900         MOV     R1,#0x0
   \   00017F   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000181   28           ADD     A,R0
   \   000182   F582         MOV     DPL,A
   \   000184   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000186   39           ADDC    A,R1
   \   000187   F583         MOV     DPH,A
   \   000189   E0           MOVX    A,@DPTR
   \   00018A   C0E0         PUSH    A
   \   00018C   8C82         MOV     DPL,R4
   \   00018E   8D83         MOV     DPH,R5
   \   000190   A3           INC     DPTR
   \   000191   A3           INC     DPTR
   \   000192   A3           INC     DPTR
   \   000193   A3           INC     DPTR
   \   000194   A3           INC     DPTR
   \   000195   D0E0         POP     A
   \   000197   F0           MOVX    @DPTR,A
   \   000198   8C82         MOV     DPL,R4
   \   00019A   8D83         MOV     DPH,R5
   \   00019C   A3           INC     DPTR
   \   00019D   A3           INC     DPTR
   \   00019E   A3           INC     DPTR
   \   00019F   A3           INC     DPTR
   \   0001A0   E0           MOVX    A,@DPTR
   \   0001A1   54E0         ANL     A,#0xe0
   \   0001A3   F0           MOVX    @DPTR,A
   \   0001A4   90....       MOV     DPTR,#dmaCfg + 1030
   \   0001A7   E0           MOVX    A,@DPTR
   \   0001A8   F8           MOV     R0,A
   \   0001A9   8C82         MOV     DPL,R4
   \   0001AB   8D83         MOV     DPH,R5
   \   0001AD   A3           INC     DPTR
   \   0001AE   A3           INC     DPTR
   \   0001AF   A3           INC     DPTR
   \   0001B0   A3           INC     DPTR
   \   0001B1   E0           MOVX    A,@DPTR
   \   0001B2   C0E0         PUSH    A
   \   0001B4   8C82         MOV     DPL,R4
   \   0001B6   8D83         MOV     DPH,R5
   \   0001B8   A3           INC     DPTR
   \   0001B9   A3           INC     DPTR
   \   0001BA   A3           INC     DPTR
   \   0001BB   A3           INC     DPTR
   \   0001BC   D0E0         POP     A
   \   0001BE   F0           MOVX    @DPTR,A
   \   0001BF   90....       MOV     DPTR,#dmaCfg + 1030
   \   0001C2   E0           MOVX    A,@DPTR
   \   0001C3   6401         XRL     A,#0x1
   \   0001C5   F0           MOVX    @DPTR,A
   \   0001C6   A2AF         MOV     C,0xa8.7
   \   0001C8   E4           CLR     A
   \   0001C9   33           RLC     A
   \   0001CA   F9           MOV     R1,A
   \   0001CB   C2AF         CLR     0xa8.7
   \   0001CD   75D610       MOV     0xd6,#0x10
   \                     ??HalUARTPollDMA_12:
   \   0001D0   00           NOP
   \   0001D1   E5D6         MOV     A,0xd6
   \   0001D3   A2E4         MOV     C,0xE0 /* A   */.4
   \   0001D5   50F9         JNC     ??HalUARTPollDMA_12
   \   0001D7   75D1EF       MOV     0xd1,#-0x11
   \   0001DA   75D710       MOV     0xd7,#0x10
   \   0001DD   E9           MOV     A,R1
   \   0001DE   FF           MOV     R7,A
   \   0001DF   E9           MOV     A,R1
   \   0001E0   A2E0         MOV     C,0xE0 /* A   */.0
   \   0001E2   92AF         MOV     0xa8.7,C
   \   0001E4   803A         SJMP    ??HalUARTPollDMA_13
   \                     ??HalUARTPollDMA_11:
   \   0001E6   A2AF         MOV     C,0xa8.7
   \   0001E8   E4           CLR     A
   \   0001E9   33           RLC     A
   \   0001EA   FA           MOV     R2,A
   \   0001EB   C2AF         CLR     0xa8.7
   \   0001ED   90....       MOV     DPTR,#dmaCfg + 1030
   \   0001F0   E0           MOVX    A,@DPTR
   \   0001F1   F8           MOV     R0,A
   \   0001F2   7900         MOV     R1,#0x0
   \   0001F4   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   0001F6   28           ADD     A,R0
   \   0001F7   F582         MOV     DPL,A
   \   0001F9   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   0001FB   39           ADDC    A,R1
   \   0001FC   F583         MOV     DPH,A
   \   0001FE   E0           MOVX    A,@DPTR
   \   0001FF   6018         JZ      ??HalUARTPollDMA_14
   \   000201   E5D6         MOV     A,0xd6
   \   000203   A2E4         MOV     C,0xE0 /* A   */.4
   \   000205   4012         JC      ??HalUARTPollDMA_14
   \   000207   E5D1         MOV     A,0xd1
   \   000209   A2E4         MOV     C,0xE0 /* A   */.4
   \   00020B   400C         JC      ??HalUARTPollDMA_14
   \   00020D   8A..         MOV     ?V0,R2
   \   00020F   EA           MOV     A,R2
   \   000210   A2E0         MOV     C,0xE0 /* A   */.0
   \   000212   92AF         MOV     0xa8.7,C
   \   000214                ; Setup parameters for call to function HalUARTIsrDMA
   \   000214   12....       LCALL   `??HalUARTIsrDMA::?relay`; Banked call to: HalUARTIsrDMA
   \   000217   8007         SJMP    ??HalUARTPollDMA_13
   \                     ??HalUARTPollDMA_14:
   \   000219   8A..         MOV     ?V1,R2
   \   00021B   EA           MOV     A,R2
   \   00021C   A2E0         MOV     C,0xE0 /* A   */.0
   \   00021E   92AF         MOV     0xa8.7,C
   \                     ??HalUARTPollDMA_13:
   \   000220   EE           MOV     A,R6
   \   000221   601E         JZ      ??HalUARTPollDMA_15
   \   000223   90....       MOV     DPTR,#dmaCfg + 1036
   \   000226   E0           MOVX    A,@DPTR
   \   000227   F8           MOV     R0,A
   \   000228   A3           INC     DPTR
   \   000229   E0           MOVX    A,@DPTR
   \   00022A   F9           MOV     R1,A
   \   00022B   E8           MOV     A,R0
   \   00022C   49           ORL     A,R1
   \   00022D   6012         JZ      ??HalUARTPollDMA_15
   \   00022F                ; Setup parameters for indirect call
   \   00022F   EE           MOV     A,R6
   \   000230   FA           MOV     R2,A
   \   000231   7900         MOV     R1,#0x0
   \   000233   90....       MOV     DPTR,#dmaCfg + 1036
   \   000236   E0           MOVX    A,@DPTR
   \   000237   F8           MOV     R0,A
   \   000238   A3           INC     DPTR
   \   000239   E0           MOVX    A,@DPTR
   \   00023A   F583         MOV     DPH,A
   \   00023C   8882         MOV     DPL,R0
   \   00023E   12....       LCALL   ?CALL_IND
   \                     ??HalUARTPollDMA_15:
   \   000241   7F02         MOV     R7,#0x2
   \   000243   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   000246                REQUIRE U0BAUD
   \   000246                REQUIRE ST0
   \   000246                REQUIRE _A_P0
   \   000246                REQUIRE _A_IEN0
   \   000246                REQUIRE DMAARM
   \   000246                REQUIRE DMAIRQ
   \   000246                REQUIRE DMAREQ

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant uint16 HalUARTRxAvailDMA(void)
   \                     HalUARTRxAvailDMA:
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   7A00         MOV     R2,#0x0
   \   000007   7B00         MOV     R3,#0x0
   \   000009   90....       MOV     DPTR,#dmaCfg + 512
   \   00000C   E0           MOVX    A,@DPTR
   \   00000D   F8           MOV     R0,A
   \   00000E   7900         MOV     R1,#0x0
   \   000010   E8           MOV     A,R0
   \   000011   75F002       MOV     B,#0x2
   \   000014   A4           MUL     AB
   \   000015   C8           XCH     A,R0
   \   000016   ACF0         MOV     R4,B
   \   000018   75F000       MOV     B,#0x0
   \   00001B   A4           MUL     AB
   \   00001C   2C           ADD     A,R4
   \   00001D   FC           MOV     R4,A
   \   00001E   75F002       MOV     B,#0x2
   \   000021   E9           MOV     A,R1
   \   000022   A4           MUL     AB
   \   000023   2C           ADD     A,R4
   \   000024   F9           MOV     R1,A
   \   000025   74..         MOV     A,#dmaCfg & 0xff
   \   000027   28           ADD     A,R0
   \   000028   F582         MOV     DPL,A
   \   00002A   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   00002C   39           ADDC    A,R1
   \   00002D   F583         MOV     DPH,A
   \   00002F   E0           MOVX    A,@DPTR
   \   000030   F8           MOV     R0,A
   \   000031   A3           INC     DPTR
   \   000032   E0           MOVX    A,@DPTR
   \   000033   F9           MOV     R1,A
   \   000034   E4           CLR     A
   \   000035   C9           XCH     A,R1
   \   000036   F8           MOV     R0,A
   \   000037   E8           MOV     A,R0
   \   000038   65C2         XRL     A,0xc2
   \   00003A   7049         JNZ     ??HalUARTRxAvailDMA_0
   \   00003C   7800         MOV     R0,#0x0
   \   00003E   7900         MOV     R1,#0x0
   \   000040   803A         SJMP    ??HalUARTRxAvailDMA_1
   \                     ??HalUARTRxAvailDMA_2:
   \   000042   E8           MOV     A,R0
   \   000043   FC           MOV     R4,A
   \   000044   E9           MOV     A,R1
   \   000045   FD           MOV     R5,A
   \   000046   EC           MOV     A,R4
   \   000047   75F002       MOV     B,#0x2
   \   00004A   A4           MUL     AB
   \   00004B   CC           XCH     A,R4
   \   00004C   AEF0         MOV     R6,B
   \   00004E   75F000       MOV     B,#0x0
   \   000051   A4           MUL     AB
   \   000052   2E           ADD     A,R6
   \   000053   FE           MOV     R6,A
   \   000054   75F002       MOV     B,#0x2
   \   000057   ED           MOV     A,R5
   \   000058   A4           MUL     AB
   \   000059   2E           ADD     A,R6
   \   00005A   FD           MOV     R5,A
   \   00005B   74..         MOV     A,#dmaCfg & 0xff
   \   00005D   2C           ADD     A,R4
   \   00005E   F582         MOV     DPL,A
   \   000060   74..         MOV     A,#(dmaCfg >> 8) & 0xff
   \   000062   3D           ADDC    A,R5
   \   000063   F583         MOV     DPH,A
   \   000065   E0           MOVX    A,@DPTR
   \   000066   FC           MOV     R4,A
   \   000067   A3           INC     DPTR
   \   000068   E0           MOVX    A,@DPTR
   \   000069   FD           MOV     R5,A
   \   00006A   E4           CLR     A
   \   00006B   CD           XCH     A,R5
   \   00006C   FC           MOV     R4,A
   \   00006D   EC           MOV     A,R4
   \   00006E   65C2         XRL     A,0xc2
   \   000070   7005         JNZ     ??HalUARTRxAvailDMA_3
   \   000072   0A           INC     R2
   \   000073   EA           MOV     A,R2
   \   000074   7001         JNZ     ??HalUARTRxAvailDMA_3
   \   000076   0B           INC     R3
   \                     ??HalUARTRxAvailDMA_3:
   \   000077   08           INC     R0
   \   000078   E8           MOV     A,R0
   \   000079   7001         JNZ     ??HalUARTRxAvailDMA_1
   \   00007B   09           INC     R1
   \                     ??HalUARTRxAvailDMA_1:
   \   00007C   C3           CLR     C
   \   00007D   E8           MOV     A,R0
   \   00007E   9400         SUBB    A,#0x0
   \   000080   E9           MOV     A,R1
   \   000081   9401         SUBB    A,#0x1
   \   000083   40BD         JC      ??HalUARTRxAvailDMA_2
   \                     ??HalUARTRxAvailDMA_0:
   \   000085   7F01         MOV     R7,#0x1
   \   000087   02....       LJMP    ?BANKED_LEAVE_XDATA
   \   00008A                REQUIRE U0BAUD

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTSuspendDMA(void)
   \                     HalUARTSuspendDMA:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   D285         SETB    0x80.5
   \   000002   5386BF       ANL     0x86,#0xbf
   \   000005   43AB10       ORL     0xab,#0x10
   \   000008   02....       LJMP    ?BRET
   \   00000B                REQUIRE _A_P0
   \   00000B                REQUIRE U0CSR
   \   00000B                REQUIRE P0IEN

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   static __banked_func __xdata_reentrant void HalUARTResumeDMA(void)
   \                     HalUARTResumeDMA:
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
   \   000000   53ABEF       ANL     0xab,#0xef
   \   000003   43C480       ORL     0xc4,#0x80
   \   000006   438640       ORL     0x86,#0x40
   \   000009   C285         CLR     0x80.5
   \   00000B   02....       LJMP    ?BRET
   \   00000E                REQUIRE P0IEN
   \   00000E                REQUIRE U0UCR
   \   00000E                REQUIRE U0CSR
   \   00000E                REQUIRE _A_P0

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
   \   __banked_func __xdata_reentrant void HalUARTIsrDMA(void)
   \                     HalUARTIsrDMA:
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
   \   000004   75D1EF       MOV     0xd1,#-0x11
   \   000007   90....       MOV     DPTR,#dmaCfg + 1030
   \   00000A   E0           MOVX    A,@DPTR
   \   00000B   6401         XRL     A,#0x1
   \   00000D   F8           MOV     R0,A
   \   00000E   7900         MOV     R1,#0x0
   \   000010   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000012   28           ADD     A,R0
   \   000013   F582         MOV     DPL,A
   \   000015   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   000017   39           ADDC    A,R1
   \   000018   F583         MOV     DPH,A
   \   00001A   7400         MOV     A,#0x0
   \   00001C   F0           MOVX    @DPTR,A
   \   00001D   90....       MOV     DPTR,#dmaCfg + 1031
   \   000020   7401         MOV     A,#0x1
   \   000022   F0           MOVX    @DPTR,A
   \   000023   E595         MOV     A,0x95
   \   000025   90....       MOV     DPTR,#dmaCfg + 1033
   \   000028   F0           MOVX    @DPTR,A
   \   000029   90....       MOV     DPTR,#dmaCfg + 1034
   \   00002C   7401         MOV     A,#0x1
   \   00002E   F0           MOVX    @DPTR,A
   \   00002F   90....       MOV     DPTR,#dmaCfg + 1030
   \   000032   E0           MOVX    A,@DPTR
   \   000033   F8           MOV     R0,A
   \   000034   7900         MOV     R1,#0x0
   \   000036   74..         MOV     A,#(dmaCfg + 4) & 0xff
   \   000038   28           ADD     A,R0
   \   000039   F582         MOV     DPL,A
   \   00003B   74..         MOV     A,#((dmaCfg + 1028) >> 8) & 0xff
   \   00003D   39           ADDC    A,R1
   \   00003E   F583         MOV     DPH,A
   \   000040   E0           MOVX    A,@DPTR
   \   000041   6006         JZ      ??HalUARTIsrDMA_0
   \   000043   90....       MOV     DPTR,#dmaCfg + 1035
   \   000046   7401         MOV     A,#0x1
   \   000048   F0           MOVX    @DPTR,A
   \                     ??HalUARTIsrDMA_0:
   \   000049   D083         POP     DPH
   \   00004B   D082         POP     DPL
   \   00004D   02....       LJMP    ?BRET
   \   000050                REQUIRE DMAIRQ
   \   000050                REQUIRE ST0
     79          #endif
     80          #if HAL_UART_ISR
     81          #include "_hal_uart_isr.c"
     82          #endif
     83          #if HAL_UART_USB
     84          #include "_hal_uart_usb.c"
     85          #endif
     86          
     87          /******************************************************************************
     88           * @fn      HalUARTInit
     89           *
     90           * @brief   Initialize the UART
     91           *
     92           * @param   none
     93           *
     94           * @return  none
     95           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
     96          void HalUARTInit(void)
   \                     HalUARTInit:
     97          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
     98          #if HAL_UART_DMA
     99            HalUARTInitDMA();
   \   000004                ; Setup parameters for call to function HalUARTInitDMA
   \   000004   12....       LCALL   `??HalUARTInitDMA::?relay`; Banked call to: HalUARTInitDMA
    100          #endif
    101          #if HAL_UART_ISR
    102            HalUARTInitISR();
    103          #endif
    104          #if HAL_UART_USB
    105            HalUARTInitUSB();
    106          #endif
    107          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    108          
    109          /******************************************************************************
    110           * @fn      HalUARTOpen
    111           *
    112           * @brief   Open a port according tp the configuration specified by parameter.
    113           *
    114           * @param   port   - UART port
    115           *          config - contains configuration information
    116           *
    117           * @return  Status of the function call
    118           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    119          uint8 HalUARTOpen(uint8 port, halUARTCfg_t *config)
   \                     HalUARTOpen:
    120          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    121            (void)port;
    122            (void)config;
    123          
    124          #if (HAL_UART_DMA == 1)
    125            if (port == HAL_UART_PORT_0)  HalUARTOpenDMA(config);
   \   000007   EE           MOV     A,R6
   \   000008   7003         JNZ     ??HalUARTOpen_0
   \   00000A                ; Setup parameters for call to function HalUARTOpenDMA
   \   00000A   12....       LCALL   `??HalUARTOpenDMA::?relay`; Banked call to: HalUARTOpenDMA
    126          #endif
    127          #if (HAL_UART_DMA == 2)
    128            if (port == HAL_UART_PORT_1)  HalUARTOpenDMA(config);
    129          #endif
    130          #if (HAL_UART_ISR == 1)
    131            if (port == HAL_UART_PORT_0)  HalUARTOpenISR(config);
    132          #endif
    133          #if (HAL_UART_ISR == 2)
    134            if (port == HAL_UART_PORT_1)  HalUARTOpenISR(config);
    135          #endif
    136          #if (HAL_UART_USB)
    137            HalUARTOpenUSB(config);
    138          #endif
    139            
    140            return HAL_UART_SUCCESS;
   \                     ??HalUARTOpen_0:
   \   00000D   7900         MOV     R1,#0x0
   \   00000F   7F01         MOV     R7,#0x1
   \   000011   02....       LJMP    ?BANKED_LEAVE_XDATA
    141          }
    142          
    143          /*****************************************************************************
    144           * @fn      HalUARTRead
    145           *
    146           * @brief   Read a buffer from the UART
    147           *
    148           * @param   port - USART module designation
    149           *          buf  - valid data buffer at least 'len' bytes in size
    150           *          len  - max length number of bytes to copy to 'buf'
    151           *
    152           * @return  length of buffer that was read
    153           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    154          uint16 HalUARTRead(uint8 port, uint8 *buf, uint16 len)
   \                     HalUARTRead:
    155          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    156            (void)port;
    157            (void)buf;
    158            (void)len;
    159          
    160          #if (HAL_UART_DMA == 1)
    161            if (port == HAL_UART_PORT_0)  return HalUARTReadDMA(buf, len);
   \   000007   EE           MOV     A,R6
   \   000008   7005         JNZ     ??HalUARTRead_0
   \   00000A                ; Setup parameters for call to function HalUARTReadDMA
   \   00000A   12....       LCALL   `??HalUARTReadDMA::?relay`; Banked call to: HalUARTReadDMA
   \   00000D   8004         SJMP    ??HalUARTRead_1
    162          #endif
    163          #if (HAL_UART_DMA == 2)
    164            if (port == HAL_UART_PORT_1)  return HalUARTReadDMA(buf, len);
    165          #endif
    166          #if (HAL_UART_ISR == 1)
    167            if (port == HAL_UART_PORT_0)  return HalUARTReadISR(buf, len);
    168          #endif
    169          #if (HAL_UART_ISR == 2)
    170            if (port == HAL_UART_PORT_1)  return HalUARTReadISR(buf, len);
    171          #endif
    172          
    173          #if HAL_UART_USB
    174            return HalUARTRx(buf, len);
    175          #else
    176            return 0;
   \                     ??HalUARTRead_0:
   \   00000F   7A00         MOV     R2,#0x0
   \   000011   7B00         MOV     R3,#0x0
   \                     ??HalUARTRead_1:
   \   000013   7F01         MOV     R7,#0x1
   \   000015   02....       LJMP    ?BANKED_LEAVE_XDATA
    177          #endif
    178          }
    179          
    180          /******************************************************************************
    181           * @fn      HalUARTWrite
    182           *
    183           * @brief   Write a buffer to the UART.
    184           *
    185           * @param   port - UART port
    186           *          buf  - pointer to the buffer that will be written, not freed
    187           *          len  - length of
    188           *
    189           * @return  length of the buffer that was sent
    190           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    191          uint16 HalUARTWrite(uint8 port, uint8 *buf, uint16 len)
   \                     HalUARTWrite:
    192          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    193            (void)port;
    194            (void)buf;
    195            (void)len;
    196          
    197          #if (HAL_UART_DMA == 1)
    198            if (port == HAL_UART_PORT_0)  return HalUARTWriteDMA(buf, len);
   \   000007   EE           MOV     A,R6
   \   000008   7005         JNZ     ??HalUARTWrite_0
   \   00000A                ; Setup parameters for call to function HalUARTWriteDMA
   \   00000A   12....       LCALL   `??HalUARTWriteDMA::?relay`; Banked call to: HalUARTWriteDMA
   \   00000D   8004         SJMP    ??HalUARTWrite_1
    199          #endif
    200          #if (HAL_UART_DMA == 2)
    201            if (port == HAL_UART_PORT_1)  return HalUARTWriteDMA(buf, len);
    202          #endif
    203          #if (HAL_UART_ISR == 1)
    204            if (port == HAL_UART_PORT_0)  return HalUARTWriteISR(buf, len);
    205          #endif
    206          #if (HAL_UART_ISR == 2)
    207            if (port == HAL_UART_PORT_1)  return HalUARTWriteISR(buf, len);
    208          #endif
    209          
    210          #if HAL_UART_USB
    211            HalUARTTx(buf, len);
    212            return len;
    213          #else
    214            return 0;
   \                     ??HalUARTWrite_0:
   \   00000F   7A00         MOV     R2,#0x0
   \   000011   7B00         MOV     R3,#0x0
   \                     ??HalUARTWrite_1:
   \   000013   7F01         MOV     R7,#0x1
   \   000015   02....       LJMP    ?BANKED_LEAVE_XDATA
    215          #endif
    216          }
    217          
    218          /******************************************************************************
    219           * @fn      HalUARTSuspend
    220           *
    221           * @brief   Suspend UART hardware before entering PM mode 1, 2 or 3.
    222           *
    223           * @param   None
    224           *
    225           * @return  None
    226           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    227          void HalUARTSuspend( void )
   \                     HalUARTSuspend:
    228          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    229          #if HAL_UART_DMA
    230            HalUARTSuspendDMA();
   \   000004                ; Setup parameters for call to function HalUARTSuspendDMA
   \   000004   12....       LCALL   `??HalUARTSuspendDMA::?relay`; Banked call to: HalUARTSuspendDMA
    231          #endif
    232          #if HAL_UART_ISR
    233            HalUARTSuspendISR();
    234          #endif
    235          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    236          
    237          /******************************************************************************
    238           * @fn      HalUARTResume
    239           *
    240           * @brief   Resume UART hardware after exiting PM mode 1, 2 or 3.
    241           *
    242           * @param   None
    243           *
    244           * @return  None
    245           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    246          void HalUARTResume( void )
   \                     HalUARTResume:
    247          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    248          #if HAL_UART_DMA
    249            HalUARTResumeDMA();
   \   000004                ; Setup parameters for call to function HalUARTResumeDMA
   \   000004   12....       LCALL   `??HalUARTResumeDMA::?relay`; Banked call to: HalUARTResumeDMA
    250          #endif
    251          #if HAL_UART_ISR
    252            HalUARTResumeISR();
    253          #endif
    254          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    255          
    256          /***************************************************************************************************
    257           * @fn      HalUARTPoll
    258           *
    259           * @brief   Poll the UART.
    260           *
    261           * @param   none
    262           *
    263           * @return  none
    264           *****************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    265          void HalUARTPoll(void)
   \                     HalUARTPoll:
    266          {
   \   000000   C082         PUSH    DPL
   \   000002   C083         PUSH    DPH
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    267          #if HAL_UART_DMA
    268            HalUARTPollDMA();
   \   000004                ; Setup parameters for call to function HalUARTPollDMA
   \   000004   12....       LCALL   `??HalUARTPollDMA::?relay`; Banked call to: HalUARTPollDMA
    269          #endif
    270          #if HAL_UART_ISR
    271            HalUARTPollISR();
    272          #endif
    273          #if HAL_UART_USB
    274            HalUARTPollUSB();
    275          #endif
    276          }
   \   000007   D083         POP     DPH
   \   000009   D082         POP     DPL
   \   00000B   02....       LJMP    ?BRET
    277          
    278          /**************************************************************************************************
    279           * @fn      Hal_UART_RxBufLen()
    280           *
    281           * @brief   Calculate Rx Buffer length - the number of bytes in the buffer.
    282           *
    283           * @param   port - UART port
    284           *
    285           * @return  length of current Rx Buffer
    286           **************************************************************************************************/

   \                                 In  segment BANKED_CODE, align 1, keep-with-next
    287          uint16 Hal_UART_RxBufLen( uint8 port )
   \                     Hal_UART_RxBufLen:
    288          {
   \   000000   74F7         MOV     A,#-0x9
   \   000002   12....       LCALL   ?BANKED_ENTER_XDATA
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   E9           MOV     A,R1
   \   000006   FE           MOV     R6,A
    289            (void)port;
    290          
    291          #if (HAL_UART_DMA == 1)
    292            if (port == HAL_UART_PORT_0)  return HalUARTRxAvailDMA();
   \   000007   EE           MOV     A,R6
   \   000008   7005         JNZ     ??Hal_UART_RxBufLen_0
   \   00000A                ; Setup parameters for call to function HalUARTRxAvailDMA
   \   00000A   12....       LCALL   `??HalUARTRxAvailDMA::?relay`; Banked call to: HalUARTRxAvailDMA
   \   00000D   8004         SJMP    ??Hal_UART_RxBufLen_1
    293          #endif
    294          #if (HAL_UART_DMA == 2)
    295            if (port == HAL_UART_PORT_1)  return HalUARTRxAvailDMA();
    296          #endif
    297          #if (HAL_UART_ISR == 1)
    298            if (port == HAL_UART_PORT_0)  return HalUARTRxAvailISR();
    299          #endif
    300          #if (HAL_UART_ISR == 2)
    301            if (port == HAL_UART_PORT_1)  return HalUARTRxAvailISR();
    302          #endif
    303          #if HAL_UART_USB
    304            return HalUARTRxAvailUSB();
    305          #else
    306            return 0;
   \                     ??Hal_UART_RxBufLen_0:
   \   00000F   7A00         MOV     R2,#0x0
   \   000011   7B00         MOV     R3,#0x0
   \                     ??Hal_UART_RxBufLen_1:
   \   000013   7F01         MOV     R7,#0x1
   \   000015   02....       LJMP    ?BANKED_LEAVE_XDATA
    307          #endif
    308          }

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??findTail::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    findTail

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTInitDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTInitDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTOpenDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTOpenDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTReadDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTReadDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTWriteDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTWriteDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTPollDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTPollDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTRxAvailDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTRxAvailDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTSuspendDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTSuspendDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTResumeDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTResumeDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTIsrDMA::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTIsrDMA

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTInit::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTInit

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTOpen::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTOpen

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTRead::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTRead

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTWrite::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTWrite

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTSuspend::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTSuspend

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTResume::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTResume

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??HalUARTPoll::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    HalUARTPoll

   \                                 In  segment BANK_RELAYS, align 1
   \                     `??Hal_UART_RxBufLen::?relay`:
   \   000000   12....       LCALL   ?BDISPATCH
   \   000003   ......       DC24    Hal_UART_RxBufLen
    309          
    310          /******************************************************************************
    311          ******************************************************************************/

   Maximum stack usage in bytes:

   ISTACK XSTACK Function
   ------ ------ --------
      2      0   HalUARTInit
        2      0   -> HalUARTInitDMA
      3      0   HalUARTInitDMA
      2     10   HalUARTIsrDMA
      0      9   HalUARTOpen
        0      9   -> HalUARTOpenDMA
      2      9   HalUARTOpenDMA
        2      0   -> osal_memset
      2      0   HalUARTPoll
        2      0   -> HalUARTPollDMA
      1     10   HalUARTPollDMA
        0     10   -> HalUARTIsrDMA
        0     10   -> HalUARTRxAvailDMA
        0     10   -> findTail
      0      9   HalUARTRead
        0      9   -> HalUARTReadDMA
      1     20   HalUARTReadDMA
      2      0   HalUARTResume
        2      0   -> HalUARTResumeDMA
      0      0   HalUARTResumeDMA
      0     19   HalUARTRxAvailDMA
      2      0   HalUARTSuspend
        2      0   -> HalUARTSuspendDMA
      0      0   HalUARTSuspendDMA
      0      9   HalUARTWrite
        0      9   -> HalUARTWriteDMA
      1     23   HalUARTWriteDMA
      0      9   Hal_UART_RxBufLen
        0      9   -> HalUARTRxAvailDMA
      2     10   findTail


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       1  ADCCFG
       1  DMAARM
       1  DMAIRQ
       1  DMAREQ
      14  HalUARTInit
       6  HalUARTInit::?relay
     764  HalUARTInitDMA
       6  HalUARTInitDMA::?relay
      80  HalUARTIsrDMA
       6  HalUARTIsrDMA::?relay
      20  HalUARTOpen
       6  HalUARTOpen::?relay
     210  HalUARTOpenDMA
       6  HalUARTOpenDMA::?relay
      14  HalUARTPoll
       6  HalUARTPoll::?relay
     582  HalUARTPollDMA
       6  HalUARTPollDMA::?relay
      24  HalUARTRead
       6  HalUARTRead::?relay
     235  HalUARTReadDMA
       6  HalUARTReadDMA::?relay
      14  HalUARTResume
       6  HalUARTResume::?relay
      14  HalUARTResumeDMA
       6  HalUARTResumeDMA::?relay
     138  HalUARTRxAvailDMA
       6  HalUARTRxAvailDMA::?relay
      14  HalUARTSuspend
       6  HalUARTSuspend::?relay
      11  HalUARTSuspendDMA
       6  HalUARTSuspendDMA::?relay
      24  HalUARTWrite
       6  HalUARTWrite::?relay
     385  HalUARTWriteDMA
       6  HalUARTWriteDMA::?relay
      24  Hal_UART_RxBufLen
       6  Hal_UART_RxBufLen::?relay
       1  P0DIR
       1  P0IEN
       1  P0SEL
       1  P2DIR
       1  PERCFG
       1  ST0
       1  U0BAUD
       1  U0CSR
       1  U0GCR
       1  U0UCR
       1  _A_IEN0
       1  _A_P0
    1038  dmaCfg
      72  findTail
       6  findTail::?relay

 
 2 639 bytes in segment BANKED_CODE
   108 bytes in segment BANK_RELAYS
    16 bytes in segment SFR_AN
 1 038 bytes in segment XDATA_Z
 
 2 747 bytes of CODE  memory
     0 bytes of DATA  memory (+ 16 bytes shared)
 1 038 bytes of XDATA memory

Errors: none
Warnings: none
